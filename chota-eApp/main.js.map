{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/all-screens.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/only-number.directive.ts","webpack:///./src/app/screen.ts","webpack:///./src/app/screens/all-attributes.ts","webpack:///./src/app/screens/css/all-screens.css","webpack:///./src/app/screens/existing-applied/existing-applied.component.html","webpack:///./src/app/screens/existing-applied/existing-applied.component.ts","webpack:///./src/app/screens/getting-started/getting-started.component.html","webpack:///./src/app/screens/getting-started/getting-started.component.ts","webpack:///./src/app/screens/owner/owner.component.html","webpack:///./src/app/screens/owner/owner.component.ts","webpack:///./src/app/screens/premium/premium.component.html","webpack:///./src/app/screens/premium/premium.component.ts","webpack:///./src/app/screens/proposed-insured/proposed-insured.component.html","webpack:///./src/app/screens/proposed-insured/proposed-insured.component.ts","webpack:///./src/app/screens/screens.component.css","webpack:///./src/app/screens/screens.component.html","webpack:///./src/app/screens/screens.component.ts","webpack:///./src/app/services/screen-service.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;ACVA;AAAA;AAAO,IAAM,OAAO,GAAa;IAC/B,EAAE,EAAE,EAAE,iBAAiB,EAAC,IAAI,EAAE,iBAAiB,EAAE;IACjD,EAAE,EAAE,EAAE,kBAAkB,EAAE,IAAI,EAAE,kBAAkB,EAAE;IACpD,EAAE,EAAE,EAAE,kBAAkB,EAAE,IAAI,EAAE,oCAAoC,EAAE;IACtE,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE;CACnC,CAAC;;;;;;;;;;;;;;;;;;;;ACPuC;AACc;AACQ;AAE/D,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,2EAAgB;KAC5B;IACD;QACE,IAAI,EAAE,EAAE;QACR,UAAU,EAAG,UAAU;QACvB,SAAS,EAAG,MAAM;KACnB;CACF,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACpB7B,+DAA+D,+H;;;;;;;;;;;ACA/D,kD;;;;;;;;;;;;;;;;;ACAoD;AASpD;IANA;QAOE,UAAK,GAAG,YAAY,CAAC;IACvB,CAAC;IAFY,YAAY;QANxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;OAEW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTiC;AACjB;AACU;AACK;AAET;AACgB;AAC+B;AACG;AAChC;AACgC;AAC1B;AACrB;AACL;AACiB;AACS;AACjB;AAuBtD;IAAA;IAAyB,CAAC;IAAb,SAAS;QArBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,2EAAgB;gBAChB,0GAAuB;gBACvB,6GAAwB;gBACxB,6EAAc;gBACd,8GAAwB;gBACxB,oFAAgB;gBAChB,2EAAmB;aACpB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,kEAAmB;gBACnB,kEAAc;gBACd,sEAAgB;aACjB;YACD,SAAS,EAAE,CAAC,6DAAY,EAAC,sFAAoB,CAAC;YAC9C,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;ACvC8C;AAKpE;IAEE,6BAAoB,GAAgB;QAAhB,QAAG,GAAH,GAAG,CAAa;IAAI,CAAC;IAEN,2CAAa,GAAb,UAAc,KAAK;QACpD,IAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,KAAK,CAAC;QAClD,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;QACpE,IAAK,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,KAAK,EAAE;YAClD,KAAK,CAAC,eAAe,EAAE,CAAC;SACzB;IACH,CAAC;IANkC;QAAlC,kEAAY,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;4DAMjC;IAVU,mBAAmB;QAH/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;SAC5B,CAAC;+EAG0B,wDAAU;OAFzB,mBAAmB,CAW/B;IAAD,0BAAC;CAAA;AAX+B;;;;;;;;;;;;;ACLhC;AAAA;AAAA;IAGI,gBAAY,EAAU,EAAC,IAAY;QACjC,IAAI,CAAC,EAAE,GAAC,EAAE,CAAC;QACX,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC;IACjB,CAAC;IACH,aAAC;AAAD,CAAC;;;;;;;;;;;;;;ACNH;AAAA;AAAO,IAAM,UAAU,GAAiB;IACpC,EAAC,IAAI,EAAC,kBAAkB,EAAC,KAAK,EAAC,EAAE,EAAE;IACnC,EAAC,IAAI,EAAC,kBAAkB,EAAC,KAAK,EAAC,EAAE,EAAE;IACnC,EAAC,IAAI,EAAC,kBAAkB,EAAC,KAAK,EAAC,EAAE,EAAE;IACnC,EAAC,IAAI,EAAC,SAAS,EAAC,KAAK,EAAC,EAAE,EAAE;IAC1B,EAAC,IAAI,EAAC,SAAS,EAAC,KAAK,EAAC,EAAE,EAAE;IAC1B,EAAC,IAAI,EAAC,WAAW,EAAC,KAAK,EAAC,EAAE,EAAE;IAC5B,EAAC,IAAI,EAAC,YAAY,EAAC,KAAK,EAAC,EAAE,EAAE;IAC7B,EAAC,IAAI,EAAC,iBAAiB,EAAC,KAAK,EAAC,EAAE,EAAE;IAClC,EAAC,IAAI,EAAC,aAAa,EAAC,KAAK,EAAC,EAAE,EAAE;IAC9B,EAAC,IAAI,EAAC,SAAS,EAAC,KAAK,EAAC,EAAE,EAAE;IAC1B,EAAC,IAAI,EAAC,eAAe,EAAC,KAAK,EAAC,EAAE,EAAE;IAChC,EAAC,IAAI,EAAC,QAAQ,EAAC,KAAK,EAAC,EAAE,EAAE;IACzB,EAAC,IAAI,EAAC,WAAW,EAAC,KAAK,EAAC,EAAE,EAAE;IAC5B,EAAC,IAAI,EAAC,YAAY,EAAC,KAAK,EAAC,EAAE,EAAE;IAC7B,EAAC,IAAI,EAAC,UAAU,EAAC,KAAK,EAAC,EAAE,EAAE;IAC3B,EAAC,IAAI,EAAC,kBAAkB,EAAC,KAAK,EAAC,EAAE,EAAE;IACnC,EAAC,IAAI,EAAC,aAAa,EAAC,KAAK,EAAC,EAAE,EAAE;IAC9B,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,EAAE,EAAE;IACtB,EAAC,IAAI,EAAC,sBAAsB,EAAC,KAAK,EAAC,EAAE,EAAE;IACvC,EAAC,IAAI,EAAC,oBAAoB,EAAC,KAAK,EAAC,EAAE,EAAE;IACrC,EAAC,IAAI,EAAC,uBAAuB,EAAC,KAAK,EAAC,EAAE,EAAE;IACxC,EAAC,IAAI,EAAC,gBAAgB,EAAC,KAAK,EAAC,EAAE,EAAE;IACjC,EAAC,IAAI,EAAC,aAAa,EAAC,KAAK,EAAC,EAAE,EAAE;CAEjC,CAAC;;;;;;;;;;;;AC1BF,2BAA2B,uBAAuB,0BAA0B,2BAA2B,0BAA0B,wBAAwB,qBAAqB,4BAA4B,yBAAyB,OAAO,iBAAiB,qBAAqB,sBAAsB,0BAA0B,6CAA6C,OAAO,aAAa,sBAAsB,+BAA+B,0BAA0B,OAAO,aAAa,uBAAuB,oBAAoB,uBAAuB,uBAAuB,0BAA0B,0BAA0B,4BAA4B,OAAO,8BAA8B,oBAAoB,uBAAuB,2BAA2B,yBAAyB,wBAAwB,2BAA2B,8BAA8B,OAAO,uBAAuB,oBAAoB,uBAAuB,2BAA2B,0BAA0B,wBAAwB,4BAA4B,8BAA8B,OAAO,aAAa,yBAAyB,qBAAqB,oBAAoB,uCAAuC,qCAAqC,qBAAqB,4BAA4B,yBAAyB,0BAA0B,6BAA6B,0BAA0B,4BAA4B,OAAO,gBAAgB,uBAAuB,oBAAoB,uBAAuB,uBAAuB,0BAA0B,yBAAyB,4BAA4B,QAAQ,aAAa,2BAA2B,qBAAqB,0BAA0B,uBAAuB,OAAO,uBAAuB,kCAAkC,2BAA2B,4BAA4B,8DAA8D,0BAA0B,4BAA4B,6CAA6C,qBAAqB,wBAAwB,2BAA2B,0BAA0B,8BAA8B,+BAA+B,OAAO,mBAAmB,kCAAkC,0BAA0B,6BAA6B,4BAA4B,8DAA8D,0BAA0B,4BAA4B,6CAA6C,qBAAqB,wBAAwB,2BAA2B,0BAA0B,8BAA8B,+BAA+B,OAAO,qBAAqB,2BAA2B,uBAAuB,kCAAkC,gCAAgC,8BAA8B,oCAAoC,kCAAkC,gCAAgC,qCAAqC,mCAAmC,iCAAiC,mCAAmC,iCAAiC,+BAA+B,qCAAqC,oCAAoC,oCAAoC,qCAAqC,qCAAqC,6BAA6B,4BAA4B,6BAA6B,0BAA0B,oBAAoB,mBAAmB,mBAAmB,kBAAkB,oBAAoB,mBAAmB,0BAA0B,mBAAmB,qBAAqB,4BAA4B,OAAO,0BAA0B,2BAA2B,yBAAyB,4BAA4B,6BAA6B,0BAA0B,oBAAoB,oBAAoB,qBAAqB,oBAAoB,oBAAoB,mBAAmB,sBAAsB,mBAAmB,qBAAqB,4BAA4B,OAAO,+CAA+C,+qR;;;;;;;;;;;ACA98H,gnHAAgnH,4CAA4C,eAAe,0CAA0C,eAAe,6CAA6C,0MAA0M,gCAAgC,a;;;;;;;;;;;;;;;;;;;ACA56H;AACvB;AACZ;AAEmC;AAO/E;IAIE,kCAAoB,EAAc,EAAU,OAA6B;QAArD,OAAE,GAAF,EAAE,CAAY;QAAU,YAAO,GAAP,OAAO,CAAsB;QAF/D,eAAU,GAAG,IAAI,0DAAY,EAAU,CAAC;QAGlD,aAAQ,GAAG,CAAC,WAAW,EAAC,QAAQ,EAAC,KAAK,EAAC,IAAI,EAAC,MAAM,EAAC,SAAS,CAAC,CAAC;QA+EhE,uBAAkB,GAAC;YACjB,sBAAsB,EAAE,sGAAsG;YAC9H,oBAAoB,EAAE,qIAAqI;YAC3J,uBAAuB,EAAE,uJAAuJ;SACjL,CAAC;QACF,0BAAqB,GAAC;YACpB,sBAAsB,EAAE,EAAE;YAC1B,oBAAoB,EAAE,EAAE;YACxB,uBAAuB,EAAE,EAAE;SAC5B,CAAC;IAzF6E,CAAC;IAE9E,2CAAQ,GAAR;QAAA,iBAeD;QAdG,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACrC,oBAAoB,EAAE,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAC9C,kBAAkB,EAAE,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAC5C,qBAAqB,EAAE,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;SAClD,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAExC,IAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,6BAA6B,EAAE,CAAC;QAChE,IAAM,QAAQ,GAAG;YACf,IAAI,EAAE,WAAC,IAAK,KAAI,CAAC,qBAAqB,GAAC,CAAC,GAAC;SACxC;QAEH,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IAEjC,CAAC;IAED,8CAAW,GAAX;QACE,KAAK,CAAC,cAAc,EAAE,CAAC;QACzB;;;;;;;;;;;eAWO;QACL,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;QAEvG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAClD,CAAC;IAED,6CAAU,GAAV,UAAW,WAAsB;QAAjC,iBA4BC;QA3BD;;;;;;;;;;;;;;eAcO;QACL,IAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC;QACrD,IAAM,QAAQ,GAAG;YACf,IAAI,EAAE,WAAC;gBACL,KAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC;oBAChC,oBAAoB,EAAE,CAAC,CAAC,oBAAoB;oBAC5C,kBAAkB,EAAE,CAAC,CAAC,kBAAkB;oBACxC,qBAAqB,EAAE,CAAC,CAAC,qBAAqB;iBAC/C,CAAC,CAAC;YAEL,CAAC;SACF;QACD,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IACjC,CAAC;IACD,yCAAM,GAAN;QACE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAClC,CAAC;IACD,yCAAM,GAAN;QACE,IAAI,KAAK,GAAG,kBAAkB,CAAC;QAC/B,IAAG,IAAI,CAAC,OAAO,EAAC;YACd,KAAK,GAAG,OAAO,CAAC;SACjB;aACG;YACF,KAAK,GAAG,kBAAkB,CAAC;SAC5B;QACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAWD,qDAAkB,GAAlB,UAAmB,KAAe;QAAlC,iBAYC;QAXC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,UAClC,GAAW;YACT,IAAM,eAAe,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAEvC,KAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,GAAC,EAAE,CAAC;YACnC,IAAG,eAAe,IAAI,CAAC,eAAe,CAAC,KAAK,EAAC;gBAC3C,KAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,GAAC,KAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;aAC9D;QACH,CAAC,CACF;QACD,IAAI,CAAC,OAAO,CAAC,8BAA8B,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IAClH,CAAC;IAxGW;QAAT,4DAAM,EAAE;;gEAAyC;IAChC;QAAjB,2DAAK,CAAC,SAAS,CAAC;;6DAAmB;IAHzB,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,4IAAgD;;SAEjD,CAAC;+EAKuB,0DAAW,EAAmB,4FAAoB;OAJ9D,wBAAwB,CA2GpC;IAAD,+BAAC;CAAA;AA3GoC;;;;;;;;;;;;ACXrC,oYAAoY,mBAAmB,kHAAkH,mDAAmD,6hBAA6hB,YAAY,03EAA03E,aAAa,otHAAotH,uCAAuC,eAAe,uCAAuC,eAAe,uCAAuC,eAAe,8BAA8B,eAAe,8BAA8B,eAAe,sCAAsC,eAAe,kCAAkC,eAAe,8BAA8B,eAAe,oCAAoC,mMAAmM,6BAA6B,a;;;;;;;;;;;;;;;;;;;;ACA3uP;AACnC;AACzB;AACa;AACsB;AAQ/E;IAgDE,iCAAoB,EAAe,EAAU,QAAsB,EAAS,OAA8B;QAAtF,OAAE,GAAF,EAAE,CAAa;QAAU,aAAQ,GAAR,QAAQ,CAAc;QAAS,YAAO,GAAP,OAAO,CAAuB;QAChG,mBAAc,GAAG,IAAI,0DAAY,EAAU,CAAC;QAC5C,eAAU,GAAG,IAAI,0DAAY,EAAU,CAAC;QAClD,iBAAY,GAAG,CAAC,gBAAgB,EAAE,QAAQ,EAAE,aAAa,EAAE,YAAY,EAAE,SAAS,CAAC,CAAC;QACpF,gBAAW,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,KAAK,CAAC;QA+I1K,uBAAkB,GAAC;YACjB,kBAAkB,EAAE,6BAA6B;YACjD,kBAAkB,EAAE,kEAAkE;YACtF,kBAAkB,EAAE,sFAAsF;YAC1G,SAAS,EAAE,qBAAqB;YAChC,SAAS,EAAE,kBAAkB;YAC7B,iBAAiB,EAAE,yFAAyF;YAC5G,aAAa,EAAE,0BAA0B;YACzC,SAAS,EAAE,gDAAgD;YAC3D,eAAe,EAAE,2CAA2C;SAC7D,CAAC;QACF,yBAAoB,GAAC;YACnB,kBAAkB,EAAE,EAAE;YACtB,kBAAkB,EAAE,EAAE;YACtB,kBAAkB,EAAE,EAAE;YACtB,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,EAAE;YACb,iBAAiB,EAAE,EAAE;YACrB,aAAa,EAAE,EAAE;YACjB,SAAS,EAAE,EAAE;YACb,eAAe,EAAE,EAAE;SACpB,CAAC;IAxK4G,CAAC;IA3C/G,0CAAQ,GAAR;QAAA,iBAyCC;QAxCC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAClC,gBAAgB,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC3C,gBAAgB,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC3C,gBAAgB,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC3C,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,SAAS,EAAE,CAAC,EAAE,CAAC;YACf,UAAU,EAAE,CAAC,EAAE,CAAC;YAChB,eAAe,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC1C,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,aAAa,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAEzC,CAAC,CAAC;QACH,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,cAAI,IAAM,KAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,EAAC,CAAC,CAAC,CAAC;QAClH,oCAAoC;QACxC;;iBAES;QACL,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACrC,+CAA+C;QAC/C,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,YAAY,CAAC,SAAS,CAC/D,cAAI;YACJ,IAAG,IAAI,IAAI,KAAK,EAAC;gBACf,KAAI,CAAC,cAAc,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;gBACnD,KAAI,CAAC,cAAc,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;aAC9C;iBACI;gBACH,KAAI,CAAC,cAAc,CAAC,UAAU,CAAC,eAAe,EAAC,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACzF,KAAI,CAAC,cAAc,CAAC,UAAU,CAAC,SAAS,EAAC,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;aACpF;QAED,CAAC,CAAC,CAAC;QACL,IAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,4BAA4B,EAAE,CAAC;QAC/D,IAAM,QAAQ,GAAG;YACf,IAAI,EAAE,WAAC,IAAK,KAAI,CAAC,oBAAoB,GAAC,CAAC,GAAC;SACvC;QAEH,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IAEjC,CAAC;IAQD,+CAAa,GAAb,UAAc,KAAa;QAEzB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC;IACD,wDAAsB,GAAtB,UAAuB,IAAY;QACjC,IAAI,IAAI,IAAI,EAAE,EAAE;YACd,IAAI,CAAC,UAAU,GAAG,8BAA8B,CAAC;SAClD;QACL;;;gBAGQ;aACC;YACH,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;SACtB;IACH,CAAC;IACD,gDAAc,GAAd,UAAe,KAAU;QACvB,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,EAAE;YAE/B,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YACpF,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,eAAe,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC1F,oDAAoD;YACpD,yDAAyD;SAE1D;aACI;YAEH,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;YAC7C,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;SACpD;IACH,CAAC;IACD,iDAAe,GAAf,UAAgB,KAAuB;QACrC,IAAI,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;QACzD,IAAI,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,EAAC,EAAE,CAAC,CAAC,CAAC;QAC5D,QAAQ,YAAY,EAAE;YACpB,KAAK,WAAW,CAAC,CAAC;gBAChB,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;oBAC7B,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC;iBAClD,CAAC,CAAC;gBACH,MAAM;aACP;YACD,KAAK,YAAY,CAAC,CAAC;gBACjB,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;oBAC7B,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC;iBACnD,CAAC,CAAC;gBACH,MAAM;aACP;YACD,KAAK,SAAS,CAAC,CAAC;gBACd,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;oBAC7B,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC;iBAChD,CAAC,CAAC;gBACH,MAAM;aACP;YACD,KAAK,eAAe,CAAC,CAAC;gBACpB,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;oBAC7B,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC;iBACtD,CAAC,CAAC;gBACH,MAAM;aACP;SACF;IACH,CAAC;IACD,6CAAW,GAAX;QACE,yBAAyB;QAC7B;;;;;;;;;;;iBAWS;QACL,kFAAkF;QACpF,iGAAiG;QAC9F,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;QAErG,2GAA2G;QAC9G;;;;;kBAKU;QACJ,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IAC/C,CAAC;IAEH,4CAAU,GAAV,UAAW,WAAuB;QAAlC,iBA8CC;QA7CF;;;;;;;;;;;;;;;;;;;;;;kBAsBU;QACR,sEAAsE;QACtE,IAAM,UAAU,GAAI,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC;QACpD,IAAM,QAAQ,GAAG;YACf,IAAI,EAAE,WAAC;gBACL,KAAI,CAAC,cAAc,CAAC,UAAU,CAAC;oBAC7B,gBAAgB,EAAG,CAAC,CAAC,gBAAgB;oBACrC,gBAAgB,EAAG,CAAC,CAAC,gBAAgB;oBACrC,gBAAgB,EAAG,CAAC,CAAC,gBAAgB;oBACrC,OAAO,EAAG,CAAC,CAAC,OAAO;oBACnB,WAAW,EAAG,CAAC,CAAC,WAAW;oBAC3B,OAAO,EAAG,CAAC,CAAC,OAAO;oBACnB,SAAS,EAAG,CAAC,CAAC,SAAS;oBACvB,UAAU,EAAG,CAAC,CAAC,UAAU;oBACzB,eAAe,EAAG,CAAC,CAAC,eAAe;oBACnC,OAAO,EAAG,CAAC,CAAC,OAAO;oBACnB,aAAa,EAAG,CAAC,CAAC,aAAa;iBAEhC,CAAC;gBACH,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC;YACxC,CAAC;SACF,CAAC;QACH,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IAChC,CAAC;IACD,wCAAM,GAAN;QAEE,IAAI,KAAK,GAAG,kBAAkB,CAAC;QAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAuBD,oDAAkB,GAAlB,UAAmB,KAAe;QAAlC,iBAgBC;QAfC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,UAClC,GAAW;YACT,IAAM,eAAe,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAEvC,KAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,GAAC,EAAE,CAAC;YAClC,IAAG,eAAe,IAAI,CAAC,eAAe,CAAC,KAAK,EAAC;gBAC3C,KAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,GAAC,KAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;aAC7D;QACH,CAAC,CACF;QACD,IAAG,KAAK,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,IAAI,KAAK,EAAC;YAC7C,IAAI,CAAC,oBAAoB,CAAC,OAAO,GAAC,EAAE,CAAC;YACrC,IAAI,CAAC,oBAAoB,CAAC,aAAa,GAAC,EAAE,CAAC;SAC5C;QACD,IAAI,CAAC,OAAO,CAAC,6BAA6B,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IAChH,CAAC;IAtOM;QAAR,2DAAK,EAAE;wEAAkB,MAAM;mEAAC;IA8CrB;QAAT,4DAAM,EAAE;;mEAA6C;IAC5C;QAAT,4DAAM,EAAE;;+DAAyC;IAlDvC,uBAAuB;QANnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,yIAA+C;;SAEhD,CAAC;+EAkDwB,0DAAW,EAAoB,4DAAY,EAAmB,4FAAoB;OAhD/F,uBAAuB,CA0OnC;IAAD,8BAAC;CAAA;AA1OmC;;;;;;;;;;;;ACZpC,yYAAyY,4NAA4N,QAAQ,ocAAoc,KAAK,6iBAA6iB,KAAK,keAAke,KAAK,0eAA0e,KAAK,6GAA6G,aAAa,yWAAyW,KAAK,mlBAAmlB,iBAAiB,aAAa,gBAAgB,aAAa,wBAAwB,aAAa,mBAAmB,aAAa,WAAW,kHAAkH,oBAAoB,Y;;;;;;;;;;;;;;;;;;;;ACAn0H;AACS;AACpC;AACC;AAEkC;AAE/E,qCAAqC;AAMrC;IAKE,wBAAoB,EAAc,EAAS,OAA8B;QAArD,OAAE,GAAF,EAAE,CAAY;QAAS,YAAO,GAAP,OAAO,CAAuB;QAH/D,eAAU,GAAG,IAAI,0DAAY,EAAU,CAAC;QACxC,eAAU,GAAG,IAAI,0DAAY,EAAU,CAAC;QAGlD,aAAQ,GAAG,CAAC,WAAW,EAAC,QAAQ,EAAC,KAAK,EAAC,IAAI,EAAC,MAAM,EAAC,SAAS,CAAC,CAAC;QAmOhE,uBAAkB,GAAG;YACnB,WAAW,EAAE,YAAY;YACzB,UAAU,EAAE,WAAW;YACvB,kBAAkB,EAAE,mBAAmB;YACvC,aAAa,EAAE,eAAe;YAC9B,KAAK,EAAE,KAAK;SACb;QACD,kBAAa,GAAG;YACd,WAAW,EAAE,YAAY;YACzB,UAAU,EAAE,WAAW;YACvB,kBAAkB,EAAE,mBAAmB;YACvC,aAAa,EAAE,eAAe;YAC9B,KAAK,EAAE,KAAK;SACb;QAYD,qBAAgB,GAAG,EAAE,CAAE;IA7PwD,CAAC;IAE9E,iCAAQ,GAAR;QAAA,iBAmBD;QAlBD,sGAAsG;QACtG,2BAA2B;QACzB,mCAAmC;QACnC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACzB,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACrB,IAAI,CAAC,UAAU,EAAE;aACjB,CAAC;SAEL,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,GAAE,CAAC,CAAC;QACd,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5B,IAAI,CAAC,gBAAgB,GAAE,EAAE,CAAC;QAC1B,IAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE,CAAC;QAClD,IAAM,QAAQ,GAAG;YACf,IAAI,EAAE,WAAC,IAAM,KAAI,CAAC,gBAAgB,GAAC,CAAC,CAAC,EAAC;SACrC;QAEH,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC;IACC,mCAAU,GAAV;QACE,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACrB,MAAM,EAAE,CAAC,EAAE,CAAC;YACZ,SAAS,EAAE,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACnC,UAAU,EAAE,CAAC,EAAE,EAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACxC,QAAQ,EAAE,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAClC,gBAAgB,EAAE,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAC1C,WAAW,EAAE,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACrC,GAAG,EAAE,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAC7B,EAAE,EAAC,CAAC,EAAE,CAAC;SACR,CAAC,CAAC;IACL,CAAC;IACD,sCAAa,GAAb;QACE,IAAI,UAAU,GAAG,CAAC,CAAC;QACnB,0DAAU,CAAC,OAAO,CAAC,cAAI;YACrB,IAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAC,EAAE,CAAC,IAAI,cAAc,EAAC;gBAC/C,UAAU,EAAE,CAAC;aACZ;QACH,CAAC,CAAC,CAAC;QACH,OAAO,UAAU,CAAC;IACpB,CAAC;IACD,oCAAW,GAAX;QAAA,iBAuDC;QAtDC,KAAK,CAAC,cAAc,EAAE,CAAC;QAEvB;;;;;;;;;;;;;;;;;;;;;;;;SAwBC;QACH,sEAAsE;QACtE,yFAAyF;QACzF,IAAI,MAAM,GAAe,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAE,CAAC;gCAG1C,KAAK;YACZ,IAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,IAAI,EAAE,EAAC;gBAC7B,IAAM,YAAU,GAAI,OAAK,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACxD,IAAM,QAAQ,GAAG;oBACf,IAAI,EAAE,WAAC;wBACL,IAAM,KAAK,GAAG,KAAI,CAAC,WAAW,EAAE,CAAC;wBACjC,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC;wBAChB,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;wBAC/B,KAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;wBACjF,KAAI,CAAC,kBAAkB,CAAY,KAAK,EAAC,KAAI,CAAC,KAAK,EAAC,CAAC,CAAC,EAAE,CAAC,CAAC;oBAC5D,CAAC;iBACF,CAAC;gBACF,YAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;gBAE/B,4FAA4F;aAC7F;iBAAI;gBACH,OAAK,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC;gBACrE,OAAK,kBAAkB,CAAY,KAAK,EAAC,OAAK,KAAK,EAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC;aAC5E;;;QApBF,0CAA0C;QAC1C,+BAA+B;QAChC,KAAkB,UAAe,EAAf,WAAM,CAAC,QAAQ,EAAf,cAAe,EAAf,IAAe;YAA5B,IAAI,KAAK;oBAAL,KAAK;SAoBb;QACD,kCAAkC;IAClC,CAAC;IAED,mCAAU,GAAV,UAAW,eAA2B;QAAtC,iBA8EG;QA7ED,IAAI,aAAa,GAAG,IAAI,GAAG,EAAE,CAAC;QAC9B,IAAI,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QAEtC,IAAK,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACvB,yDAAyD;QAEvE,IAAI,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC;QAC1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WA+BG,KAAM,UAAU,GAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QAC3C,IAAM,QAAQ,GAAG;YACf,IAAI,EAAE,WAAC;gBACN,kEAAkE;gBACjE,IAAI,WAAW,GAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;gBACzC,CAAC,CAAC,OAAO,CAAC,iBAAO;oBACf,IAAI,eAAe,GAAG,KAAI,CAAC,UAAU,EAAE,CAAC;oBACxC,eAAe,CAAC,UAAU,CAAC;wBAC3B,MAAM,EAAE,OAAO,CAAC,MAAM;wBACtB,SAAS,EAAE,OAAO,CAAC,SAAS;wBAC5B,UAAU,EAAE,OAAO,CAAC,UAAU;wBAC9B,QAAQ,EAAE,OAAO,CAAC,QAAQ;wBAC1B,gBAAgB,EAAE,OAAO,CAAC,gBAAgB;wBAC1C,WAAW,EAAE,OAAO,CAAC,WAAW;wBAChC,GAAG,EAAE,OAAO,CAAC,GAAG;wBAChB,EAAE,EAAC,OAAO,CAAC,EAAE;qBACZ,CAAC;oBACF,sEAAsE;oBAEtE,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;gBACnC,CAAC,CAAC,CAAC;gBACH,IAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,GAAG;oBAClC,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,UAAU,EAAE,CAAC,CAAC;gBACnC,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,EAAE,CAAC,KAAK,CAAC;oBACzB,MAAM,EAAK,UAAU;iBACtB,CAAC,CAAC;gBACX;;;;;;;;6BAQa;YAEb,CAAC;SACI;QACD,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IACjC,CAAC;IAEH,sBAAI,uCAAW;aAAf;YACE,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAc,CAAC;QACpD,CAAC;;;OAAA;IAGD,iCAAQ,GAAR;QACc,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAE,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;QAC/D,2FAA2F;IAC5F,CAAC;IAED,oCAAW,GAAX,UAAY,QAAe,EAAC,KAAa;QACvC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACpC,IAAI,MAAM,GAAG,0DAAU,CAAC,SAAS,CAAC,UAAS,SAAS,IAAE,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,IAAE,GAAG,GAAC,KAAK,CAAC,GAAC,CAAC;QACvG,0CAA0C;QAC1C,0DAAU,CAAC,MAAM,CAAC,MAAM,EAAC,CAAC,CAAC,CAAC;QAC5B,IAAG,MAAM,GAAC,CAAC,IAAI,MAAM,IAAE,0DAAU,CAAC,MAAM,EAAC;YACvC,0DAAU,CAAC,OAAO,CAAC,cAAI;gBACrB,IAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,IAAI,GAAG,GAAC,CAAC,KAAK,GAAC,CAAC,CAAC,EAAC;oBACzC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAC,CAAC,CAAC,GAAC,KAAK,CAAC;iBAC5E;YACH,CAAC,CAAC;SACH;QACH,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC;QAC5C,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC;IACvD,CAAC;IAGD,qCAAY,GAAZ,UAAa,IAAa;QACxB,mEAAmE;QACnE,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACxC,IAAG,IAAI,GAAC,IAAI,IAAI,IAAI,GAAE,IAAI,EAAC;YACzB,2CAA2C;YAE3C,IAAI,CAAC,WAAW,GAAG,2BAA2B,CAAC;SAChD;aACG;YACF,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;SACvB;IACH,CAAC;IACD,+BAAM,GAAN;QACE,IAAI,KAAK,GAAG,kBAAkB,CAAC;QAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IACD,+BAAM,GAAN;QAEE,IAAI,KAAK,GAAG,kBAAkB,CAAC;QAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAeD,oCAAW,GAAX;QACE,IAAI,MAAM,GAAG;YACX,WAAW,EAAG,EAAE;YAChB,UAAU,EAAE,EAAE;YACd,kBAAkB,EAAE,EAAE;YACtB,aAAa,EAAE,EAAE;YACjB,KAAK,EAAE,EAAE;YACT,IAAI,EAAC,EAAE;SACR;QACH,OAAO,MAAM,CAAC;IACd,CAAC;IAAA,CAAC;IAEF,2CAAkB,GAAlB,UAAmB,KAAe,EAAC,KAAY,EAAC,EAAS;QAAzD,iBAyBC;QAxBC,MAAM,CAAC,IAAI,CAAa,KAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,UAC/C,GAAW;YACT,IAAM,eAAe,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACvC,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,GAAC,EAAE,CAAC;YAC3B,IAAG,eAAe,IAAI,CAAC,eAAe,CAAC,KAAK,EAAC;gBAC3C,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,GAAC,KAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,GAAC,GAAG,GAAC,KAAK,GAAC,cAAc,CAAC;gBAChF,sCAAsC;gBACtC,iFAAiF;aAChF;QACH,CAAC,CACF;QACD,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,EAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;QAC7H,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,mCAAmC;QACnC,gDAAgD;QAC9C,2CAA2C;QAC/C;;;;WAIG;QAED,iCAAiC;IAEnC,CAAC;IA1RW;QAAT,4DAAM,EAAE;;sDAAyC;IACxC;QAAT,4DAAM,EAAE;;sDAAyC;IAHvC,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,2GAAqC;;SAEtC,CAAC;+EAMuB,0DAAW,EAAmB,4FAAoB;OAL9D,cAAc,CA6R1B;IAAD,qBAAC;CAAA;AA7R0B;;;;;;;;;;;;ACb3B,8eAA8e,OAAO,kjBAAkjB,aAAa,mpCAAmpC,8BAA8B,eAAe,2BAA2B,0HAA0H,sBAAsB,S;;;;;;;;;;;;;;;;;;;ACAh1E;AACvB;AACZ;AAEmC;AAO/E;IAKE,0BAAoB,EAAc,EAAS,OAA4B;QAAnD,OAAE,GAAF,EAAE,CAAY;QAAS,YAAO,GAAP,OAAO,CAAqB;QAJvE,mBAAc,GAAG,CAAC,kBAAkB,EAAC,OAAO,EAAC,OAAO,CAAC,CAAC;QACtD,iBAAY,GAAG,CAAC,gBAAgB,EAAC,QAAQ,EAAC,aAAa,EAAC,YAAY,EAAC,SAAS,CAAC,CAAC;QAEtE,eAAU,GAAG,IAAI,0DAAY,EAAU,CAAC;QAmEpD,uBAAkB,GAAC;YACjB,gBAAgB,EAAE,2BAA2B;YAC7C,aAAa,EAAE,0BAA0B;SAC1C;QACD,kBAAa,GAAC;YACZ,gBAAgB,EAAE,EAAE;YACpB,aAAa,EAAE,EAAE;SAClB;IAzE4E,CAAC;IAE5E,mCAAQ,GAAR;QAAA,iBAgBC;QAfC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,cAAc,EAAE,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACxC,WAAW,EAAE,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;SAIxC,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC9B,IAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE,CAAC;QACtD,IAAM,QAAQ,GAAG;YACf,IAAI,EAAE,WAAC,IAAK,KAAI,CAAC,aAAa,GAAC,CAAC,GAAC;SAChC;QAEH,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IAEjC,CAAC;IAEH,sCAAW,GAAX;QACE,KAAK,CAAC,cAAc,EAAE,CAAC;QACzB;;;;;;;;;;;eAWO;QACH,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;QACrF,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC1C,CAAC;IAED,qCAAU,GAAV,UAAW,WAAsB;QAAjC,iBAuBC;QAtBC;;;;;;;;;;;;;aAaK;QACL,IAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;QAC7C,IAAM,QAAQ,GAAE;YACd,IAAI,EAAC,WAAC;gBAAI,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC;oBAChC,cAAc,EAAE,CAAC,CAAC,cAAc;oBAChC,WAAW,EAAE,CAAC,CAAC,WAAW;iBAC3B,CAAC;YAAC,CAAC;SACL;QACD,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IACjC,CAAC;IACD,iCAAM,GAAN;QACE,IAAI,KAAK,GAAG,kBAAkB,CAAC;QAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IASD,6CAAkB,GAAlB,UAAmB,KAAe;QAAlC,iBAaC;QAZC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,UAClC,GAAW;YACT,IAAM,eAAe,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAEvC,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,GAAC,EAAE,CAAC;YAC3B,IAAG,eAAe,IAAI,CAAC,eAAe,CAAC,KAAK,EAAC;gBAC3C,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,GAAC,KAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;aACtD;QACH,CAAC,CACF;QAED,IAAI,CAAC,OAAO,CAAC,6BAA6B,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IACzG,CAAC;IAxFW;QAAT,4DAAM,EAAE;;wDAAyC;IAJvC,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,iHAAuC;;SAExC,CAAC;+EAMuB,0DAAW,EAAiB,4FAAoB;OAL5D,gBAAgB,CA6F5B;IAAD,uBAAC;CAAA;AA7F4B;;;;;;;;;;;;ACX7B,ocAAoc,QAAQ,glEAAglE,aAAa,yxBAAyxB,iCAAiC,eAAe,gCAAgC,eAAe,wCAAwC,eAAe,mCAAmC,eAAe,2BAA2B,uMAAuM,8BAA8B,a;;;;;;;;;;;;;;;;;;;ACAhrH;AAClC;AACZ;AAEmC;AAM/E;IAME,kCAAoB,EAAe,EAAU,OAA6B;QAAtD,OAAE,GAAF,EAAE,CAAa;QAAU,YAAO,GAAP,OAAO,CAAsB;QAJhE,eAAU,GAAG,IAAI,0DAAY,EAAU,CAAC;QACxC,eAAU,GAAG,IAAI,0DAAY,EAAU,CAAC;QAIlD,aAAQ,GAAG,CAAC,WAAW,EAAE,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;QAuGnE,uBAAkB,GAAE;YAClB,WAAW,EAAE,yBAAyB;YACtC,UAAU,EAAE,wBAAwB;YACpC,kBAAkB,EAAE,gCAAgC;YACpD,aAAa,EAAE,4BAA4B;YAC3C,KAAK,EAAE,kBAAkB;SAC1B;QACD,0BAAqB,GAAE;YACrB,WAAW,EAAE,EAAE;YACf,UAAU,EAAE,EAAE;YACd,kBAAkB,EAAE,EAAE;YACtB,aAAa,EAAE,EAAE;YACjB,KAAK,EAAE,EAAE;SACV;IArH6E,CAAC;IAE/E,2CAAQ,GAAR;QAAA,iBAiBC;QAhBC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnC,MAAM,EAAE,CAAC,EAAE,CAAC;YACZ,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,UAAU,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACzC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,gBAAgB,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC3C,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,GAAG,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC/B,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACtC,IAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,8BAA8B,EAAE,CAAC;QACjE,IAAM,QAAQ,GAAG;YACf,IAAI,EAAE,WAAC,IAAK,KAAI,CAAC,qBAAqB,GAAC,CAAC,GAAC;SACxC;QAEH,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IACjC,CAAC;IAED,+CAAY,GAAZ,UAAa,IAAa;QACxB,mEAAmE;QACnE,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACxC,IAAG,IAAI,GAAC,IAAI,IAAI,IAAI,GAAE,IAAI,EAAC;YACzB,2CAA2C;YAE3C,IAAI,CAAC,WAAW,GAAG,2BAA2B,CAAC;SAChD;aACG;YACF,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;SACvB;IACH,CAAC;IAED,8CAAW,GAAX;QACE,KAAK,CAAC,cAAc,EAAE,CAAC;QAC3B;;;;;;;;;;;iBAWS;QACL,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;QACrG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IAChD,CAAC;IAED,6CAAU,GAAV,UAAW,WAAsB;QAAjC,iBAqCC;QApCC;;;;;;;;;;;;;;;;;;aAkBK;QACL,IAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC;QACrD,IAAM,QAAQ,GAAG;YACf,IAAI,EAAE,WAAC;gBACL,KAAI,CAAC,eAAe,CAAC,UAAU,CAAC;oBAC9B,MAAM,EAAE,CAAC,CAAC,MAAM;oBAChB,SAAS,EAAE,CAAC,CAAC,SAAS;oBACtB,UAAU,EAAE,CAAC,CAAC,UAAU;oBACxB,QAAQ,EAAE,CAAC,CAAC,QAAQ;oBACpB,gBAAgB,EAAE,CAAC,CAAC,gBAAgB;oBACpC,WAAW,EAAE,CAAC,CAAC,WAAW;oBAC1B,GAAG,EAAE,CAAC,CAAC,GAAG;iBACX,CAAC,CAAC;YAEL,CAAC;SACF;QACD,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IAEjC,CAAC;IACD,yCAAM,GAAN;QACE,IAAI,KAAK,GAAG,iBAAiB,CAAC;QAC9B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IACD,yCAAM,GAAN;QACE,IAAI,KAAK,GAAE,kBAAkB,CAAC;QAC9B,IAAG,IAAI,CAAC,OAAO,EAAC;YACd,KAAK,GAAG,OAAO,CAAC;SACjB;aACG;YACF,KAAK,GAAG,kBAAkB;SAC3B;QACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAeD,qDAAkB,GAAlB,UAAmB,KAAe;QAAlC,iBAYC;QAXC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,UAClC,GAAW;YACT,IAAM,eAAe,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAEvC,KAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,GAAC,EAAE,CAAC;YACnC,IAAG,eAAe,IAAI,CAAC,eAAe,CAAC,KAAK,EAAC;gBAC3C,KAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,GAAC,KAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;aAC9D;QACH,CAAC,CACF;QACD,IAAI,CAAC,OAAO,CAAC,+BAA+B,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IACnH,CAAC;IAvIQ;QAAR,2DAAK,EAAE;wEAAiB,MAAM;oEAAC;IACtB;QAAT,4DAAM,EAAE;;gEAAyC;IACxC;QAAT,4DAAM,EAAE;;gEAAyC;IAChC;QAAjB,2DAAK,CAAC,SAAS,CAAC;;6DAAmB;IAJzB,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,4IAAgD;;SAEjD,CAAC;+EAOwB,0DAAW,EAAmB,4FAAoB;OAN/D,wBAAwB,CAyIpC;IAAD,+BAAC;CAAA;AAzIoC;;;;;;;;;;;;ACVrC,sBAAsB,kBAAkB,iBAAiB,KAAK,cAAc,0BAA0B,8BAA8B,mBAAmB,oBAAoB,OAAO,iBAAiB,wBAAwB,2BAA2B,gBAAgB,iCAAiC,qCAAqC,qBAAqB,wBAAwB,sBAAsB,2BAA2B,mBAAmB,kBAAkB,sBAAsB,2BAA2B,0BAA0B,OAAO,uBAAuB,uBAAuB,4CAA4C,mBAAmB,OAAO,qBAAqB,8BAA8B,yBAAyB,qBAAqB,qCAAqC,kCAAkC,yBAAyB,2BAA2B,mBAAmB,kBAAkB,sBAAsB,2BAA2B,mCAAmC,OAAO,mDAAmD,+mE;;;;;;;;;;;ACApiC,8HAA8H,aAAa,8EAA8E,aAAa,q7B;;;;;;;;;;;;;;;;;;;;;;;;ACA1J;AAC5C;AACM;AACgD;AACG;AAChC;AACM;AAC0B;AAOzF;IAkBI;QAFF,sBAAsB;QACtB,YAAO,GAAC,oDAAO,CAAC;QAuChB,gBAAW,GAAG,IAAI,8CAAM,CAAC,OAAO,EAAC,OAAO,CAAC;IAtCvB,CAAC;IAEnB,mCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAE,KAAK,CAAC;QACvB,IAAI,CAAC,cAAc,GAAG,iBAAiB,CAAC;IAC1C,CAAC;IACH;;;;;;;;;UASM;IACN;;UAEM;IACJ,2CAAgB,GAAhB,UAAiB,MAAe;QAC9B,IAAK,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC;QACvC,IAAI,CAAC,cAAc,GAAC,MAAM,CAAC,EAAE,CAAC;QAC9B,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;IAChC,CAAC;IACD,sCAAW,GAAX,UAAY,MAAe;QAC7B;;;2DAGmD;QAC/C,mCAAmC;QACnC,QAAO,MAAM,EAAC;YACZ,KAAK,iBAAkB,CAAC,CAAG;gBAAC,IAAI,CAAC,uBAAuB,CAAC,WAAW,EAAE,CAAC;gBAAC,MAAM;aAAC;YAC/E,KAAK,kBAAmB,CAAC,CAAE;gBAAC,IAAI,CAAC,wBAAwB,CAAC,WAAW,EAAE,CAAC;gBAAC,MAAM;aAAC;YAChF,KAAK,OAAQ,CAAC,CAAE;gBAAC,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;gBAAC,MAAM;aAAC;YAC3D,KAAK,kBAAmB,CAAC,CAAE;gBAAC,IAAI,CAAC,wBAAwB,CAAC,WAAW,EAAE,CAAC;gBAAC,MAAM;aAAC;YAChF,KAAK,SAAU,CAAC,CAAE;gBAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;aAAE;SAC1D;IACH,CAAC;IAGD,2CAAgB,GAAhB,UAAiB,UAAmB;QAClC,IAAG,UAAU,IAAI,KAAK,EAAC;YACrB,IAAI,CAAC,UAAU,GAAE,IAAI,CAAC;YACtB,IAAG,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,EAAC;gBAC5C,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,EAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aACzC;SACF;aAAI;YACH,IAAI,CAAC,UAAU,GAAE,KAAK,CAAC;YACxB,kCAAkC;YACjC,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC;gBAC1C,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;SAC1B;IACH,CAAC;IACD,2CAAgB,GAAhB,UAAiB,UAAmB;QAClC,IAAK,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC;QACvC,IAAI,CAAC,cAAc,GAAC,UAAU,CAAC;QAC/B,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;IAChC,CAAC;IACD,2CAAgB,GAAhB,UAAiB,UAAmB;QAClC,IAAK,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC;QACvC,IAAI,CAAC,cAAc,GAAC,UAAU,CAAC;QAC/B,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;IAChC,CAAC;IA3EF;QADC,+DAAS,CAAC,kGAAuB,CAAC;wEACD,kGAAuB;qEAAC;IAE1D;QADC,+DAAS,CAAC,qGAAwB,CAAC;wEACD,qGAAwB;sEAAC;IAE5D;QADC,+DAAS,CAAC,qEAAc,CAAC;wEACD,qEAAc;4DAAC;IAExC;QADC,+DAAS,CAAC,2EAAgB,CAAC;wEACF,2EAAgB;8DAAC;IAE3C;QADC,+DAAS,CAAC,qGAAwB,CAAC;wEACF,qGAAwB;sEAAC;IAb/C,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,yGAAuC;;SAExC,CAAC;;OACW,gBAAgB,CAiF5B;IAAD,uBAAC;CAAA;AAjF4B;;;;;;;;;;;;;;;;;;;ACdc;AACM;AAEjD,8CAA8C;AAK9C;IAEE,8BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAD5B,YAAO,GAAG,2BAA2B,CAAC;IACN,CAAC;IACzC,0CAAW,GAAX,UAAY,UAAkB;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAG,IAAI,CAAC,OAAS,EAAE,UAAU,CAAC,CAAC;IACvD,CAAC;IACD,iDAAkB,GAAlB,UAAmB,UAAiB;QAClC,OAAO,CAAC,GAAG,CAAC,mCAAmC,GAAC,UAAU,CAAC,CAAC;QAC5D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,IAAI,CAAC,OAAO,GAAC,iBAAiB,EAAE,UAAU,CAAC,CAAC;IAC1E,CAAC;IACD,wCAAS,GAAT,UAAU,UAAiB;QACzB,OAAO,CAAC,GAAG,CAAC,0BAA0B,GAAC,UAAU,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,IAAI,CAAC,OAAO,GAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;IACjE,CAAC;IACD,uCAAQ,GAAR,UAAS,UAAiB,EAAC,KAAY;QACrC,OAAO,CAAC,GAAG,CAAC,yBAAyB,GAAC,UAAU,CAAC,CAAC;QAClD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,IAAI,CAAC,OAAO,GAAC,SAAS,GAAC,KAAK,EAAE,UAAU,CAAC,CAAC;IACvE,CAAC;IACD,0CAAW,GAAX,UAAY,KAAY;QACtB,OAAO,CAAC,GAAG,CAAC,0BAA0B,GAAC,KAAK,CAAC,CAAC;QAC9C,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAC,SAAS,GAAC,KAAK,CAAC,CAAC;IACxD,CAAC;IACD,kDAAmB,GAAnB,UAAoB,UAAiB;QACnC,OAAO,CAAC,GAAG,CAAC,qCAAqC,GAAC,UAAU,CAAC,CAAC;QAC9D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,IAAI,CAAC,OAAO,GAAC,kBAAkB,EAAE,UAAU,CAAC,CAAC;IAC3E,CAAC;IACD,kDAAmB,GAAnB,UAAoB,UAAiB;QACnC,OAAO,CAAC,GAAG,CAAC,6BAA6B,GAAC,UAAU,CAAC,CAAC;QACtD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,IAAI,CAAC,OAAO,GAAC,iBAAiB,EAAE,UAAU,CAAC,CAAC;IAC1E,CAAC;IACD,0CAAW,GAAX,UAAY,UAAiB;QAC3B,OAAO,CAAC,GAAG,CAAC,4BAA4B,GAAC,UAAU,CAAC,CAAC;QACrD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,IAAI,CAAC,OAAO,GAAC,SAAS,EAAE,UAAU,CAAC,CAAC;IAClE,CAAC;IACD,gDAAiB,GAAjB;QAEE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,IAAI,CAAC,OAAO,GAAC,iBAAiB,CAAC,CAAC;IAC7D,CAAC;IAED,iDAAkB,GAAlB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,IAAI,CAAC,OAAO,GAAC,kBAAkB,CAAC,CAAC;IAC9D,CAAC;IACD,uCAAQ,GAAR;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,IAAI,CAAC,OAAO,GAAC,QAAQ,CAAC,CAAC;IACpD,CAAC;IACD,iDAAkB,GAAlB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,IAAI,CAAC,OAAO,GAAC,iBAAiB,CAAC,CAAC;IAC7D,CAAC;IACD,yCAAU,GAAV;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,IAAI,CAAC,OAAO,GAAC,SAAS,CAAC,CAAC;IACrD,CAAC;IACD,2DAA4B,GAA5B;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAK,IAAI,CAAC,OAAO,GAAC,sBAAsB,CAAC,CAAC;IAChE,CAAC;IACD,6DAA8B,GAA9B;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAK,IAAI,CAAC,OAAO,GAAC,wBAAwB,CAAC,CAAC;IAClE,CAAC;IACD,kDAAmB,GAAnB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAK,IAAI,CAAC,OAAO,GAAC,aAAa,CAAC,CAAC;IACvD,CAAC;IACD,4DAA6B,GAA7B;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAK,IAAI,CAAC,OAAO,GAAC,uBAAuB,CAAC,CAAC;IACjE,CAAC;IACD,oDAAqB,GAArB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAK,IAAI,CAAC,OAAO,GAAC,eAAe,CAAC,CAAC;IACzD,CAAC;IACD,4DAA6B,GAA7B,UAA8B,MAAa;QACzC,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;QACvC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,IAAI,CAAC,OAAO,GAAC,sBAAsB,EAAC,MAAM,CAAC,CAAC;IAC1E,CAAC;IACD,8DAA+B,GAA/B,UAAgC,MAAa;QAC3C,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;QACvC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,IAAI,CAAC,OAAO,GAAC,wBAAwB,EAAC,MAAM,CAAC,CAAC;IAC5E,CAAC;IACD,mDAAoB,GAApB,UAAqB,MAAa;QAChC,OAAO,CAAC,GAAG,CAAC,+BAA+B,GAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;QACpE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,IAAI,CAAC,OAAO,GAAC,aAAa,EAAC,MAAM,CAAC,CAAC;IACjE,CAAC;IACD,kDAAmB,GAAnB,UAAoB,MAAa,EAAC,KAAY;QAC5C,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;QAC5C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,IAAI,CAAC,OAAO,GAAC,cAAc,GAAC,KAAK,EAAC,MAAM,CAAC,CAAC;IACvE,CAAC;IACD,qDAAsB,GAAtB,UAAuB,KAAY;QACjC,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;QAC1C,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAO,IAAI,CAAC,OAAO,GAAC,cAAc,GAAC,KAAK,CAAC,CAAC;IACnE,CAAC;IACD,6DAA8B,GAA9B,UAA+B,MAAa;QAC1C,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;QACvC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,IAAI,CAAC,OAAO,GAAC,uBAAuB,EAAC,MAAM,CAAC,CAAC;IAC3E,CAAC;IACD,qDAAsB,GAAtB,UAAuB,MAAa;QAClC,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;QACvC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,IAAI,CAAC,OAAO,GAAC,eAAe,EAAC,MAAM,CAAC,CAAC;IACnE,CAAC;IA7FU,oBAAoB;QAJhC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAI0B,+DAAU;OAFzB,oBAAoB,CA8FhC;IAAD,2BAAC;CAAA;AA9FgC;;;;;;;;;;;;;ACRjC;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Screen } from './screen';\r\n\r\nexport const SCREENS: Screen[] = [\r\n  { id: \"getting-started\",name: 'Getting Started' },\r\n  { id: \"proposed-insured\", name: 'Proposed Insured' },\r\n  { id: \"existing-applied\", name: 'Existing and Applied for Insurance' },\r\n  { id: \"premium\", name: 'Premium' }\r\n];","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ScreensComponent } from './screens/screens.component';\n\nconst routes: Routes = [\n  {\n    path: 'screens',\n    component :ScreensComponent\n  },\n  {\n    path :'',\n    redirectTo : '/screens',\n    pathMatch : 'full'    \n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-screens></app-screens>\\r\\n\"","import { Component, NgModule } from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'chota-eApp';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport {Route} from '@angular/router'\nimport { AppComponent } from './app.component';\nimport { ScreensComponent } from './screens/screens.component';\nimport { GettingStartedComponent } from './screens/getting-started/getting-started.component';\nimport { ProposedInsuredComponent } from './screens/proposed-insured/proposed-insured.component';\nimport { OwnerComponent } from './screens/owner/owner.component';\nimport { ExistingAppliedComponent } from './screens/existing-applied/existing-applied.component';\nimport { PremiumComponent } from './screens/premium/premium.component';\nimport {TextMaskModule} from 'angular2-text-mask';\nimport {CurrencyPipe} from '@angular/common';\nimport { OnlyNumberDirective } from './only-number.directive';\nimport {ScreenServiceService} from './services/screen-service.service';\nimport {HttpClientModule} from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ScreensComponent,\n    GettingStartedComponent,\n    ProposedInsuredComponent,\n    OwnerComponent,\n    ExistingAppliedComponent,\n    PremiumComponent,\n    OnlyNumberDirective,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    TextMaskModule,\n    HttpClientModule\n  ],\n  providers: [CurrencyPipe,ScreenServiceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Directive, HostListener, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appOnlyNumber]'\n})\nexport class OnlyNumberDirective {\n\n  constructor(private _el : ElementRef) { }\n\n  @HostListener('input', ['$event']) onInputChange(event) {\n    const initialValue = this._el.nativeElement.value;\n    this._el.nativeElement.value = initialValue.replace(/[^0-9]*/g, '');\n    if ( initialValue !== this._el.nativeElement.value) {\n      event.stopPropagation();\n    }\n  }\n}\n","export class Screen {\r\n    id :string;\r\n    name: string;\r\n    constructor(id: string,name: string){\r\n      this.id=id;\r\n      this.name=name;\r\n    }\r\n  }","import {attribute} from './attribute';\r\nexport const attributes : attribute[] = [\r\n    {name:'Application_CRDA',value:'' },\r\n    {name:'appcompletedinUS',value:'' },\r\n    {name:'ownerOtherThanPI',value:'' },\r\n    {name:'product',value:'' },\r\n    {name:'niprNum',value:'' },\r\n    {name:'preAmount',value:'' },\r\n    {name:'faceAmount',value:'' },\r\n    {name:'illustrationPDF',value:'' },\r\n    {name:'premiumMode',value:'' },\r\n    {name:'lumpsum',value:'' },\r\n    {name:'singlePremium',value:'' },\r\n    {name:'prefix',value:'' },\r\n    {name:'firstName',value:'' },\r\n    {name:'middleName',value:'' },\r\n    {name:'lastName',value:'' },\r\n    {name:'permanentAddress',value:'' },\r\n    {name:'dateofBirth',value:'' },\r\n    {name:'ssn',value:'' },\r\n    {name:'a_InforceNAppliedfor',value:'' },\r\n    {name:'a_OffPaymtInd_PINS',value:'' },\r\n    {name:'a_OwnSoldTransLifeInd',value:'' },\r\n    {name:'premium_payors',value:'' },\r\n    {name:'paymentMode',value:'' },\r\n\r\n];","module.exports = \".heading{\\r\\n    color: #595959; \\r\\n    font-size: 1.8em;\\r\\n    FONT-FAMILY: Arial;\\r\\n    FONT-WEIGHT: bold;\\r\\n    margin-top: 4px;\\r\\n    padding: 3px;\\r\\n    vertical-align: top;\\r\\n    text-align: left;\\r\\n  }\\r\\n  .mandatory{\\r\\n  color: #D3222A;\\r\\n  font-size: .9em;\\r\\n  FONT-WEIGHT: normal;\\r\\n  FONT-FAMILY: Arial, Verdana, Helvetica;\\r\\n  }\\r\\n  :host {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    padding-top: 24px;\\r\\n  }\\r\\n  label {\\r\\n    display: block;\\r\\n    width: 25em;\\r\\n    margin: .5em 0;\\r\\n    color: #607D8B;\\r\\n    font-weight: bold;\\r\\n    text-align: right;\\r\\n    margin-bottom: 18px;\\r\\n  }\\r\\n  input[type=text] select{\\r\\n    height: 1em;\\r\\n    font-size: 1em;\\r\\n    padding-left: .4em;\\r\\n    margin-left: 2px;\\r\\n    margin-top: 2px;\\r\\n    margin-bottom: 2px;\\r\\n    display: inline-block;\\r\\n  }\\r\\n  input[type=date]{\\r\\n    height: 1em;\\r\\n    font-size: 1em;\\r\\n    padding-left: .4em;\\r\\n    margin-left: 22px;\\r\\n    margin-top: 2px;\\r\\n    margin-bottom: 17px;\\r\\n    display: inline-block;\\r\\n  }\\r\\n  .pages{\\r\\n    margin-top: 13px;\\r\\n    width: 1500%;\\r\\n    height: 96%;\\r\\n    /* margin: 10px auto 10px auto; */\\r\\n    background-color: #e6f7f8;\\r\\n    opacity: 0.9;\\r\\n    border-radius: 15px;\\r\\n    text-align: left;\\r\\n    padding-top: 10px;\\r\\n    padding-bottom: 10px;\\r\\n    padding-left: 4px;\\r\\n    padding-right: 10px;\\r\\n  }\\r\\n  .radioQue{\\r\\n    display: block;\\r\\n    width: 25em;\\r\\n    margin: .5em 0;\\r\\n    color: #607D8B;\\r\\n    font-weight: bold;\\r\\n    text-align: left;\\r\\n    margin-bottom: 18px; \\r\\n  }\\r\\n  .alert{\\r\\n    margin-left: 196px;\\r\\n    width: 424px;\\r\\n    margin-top: -19px;\\r\\n    color: #a94442;\\r\\n  }\\r\\n  .previousButton {\\r\\n    border: 1px solid #aaaeb3;\\r\\n    margin-left: 213px;\\r\\n    background: #00465A;\\r\\n    background: -o-linear-gradient(top, #00465A, #00465A);\\r\\n    padding: 7px 20px;\\r\\n    border-radius: .6em;\\r\\n    box-shadow: rgba(0, 0, 0, 1) 0 0px 0;\\r\\n    color: white;\\r\\n    font-size: 16px;\\r\\n    font-family: Arial;\\r\\n    font-weight: bold;\\r\\n    text-decoration: none;\\r\\n    vertical-align: middle;\\r\\n  }\\r\\n  .nextButton {\\r\\n    border: 1px solid #aaaeb3;\\r\\n    margin-left: 21px;\\r\\n    margin-right: -175px;\\r\\n    background: #00465A;\\r\\n    background: -o-linear-gradient(top, #00465A, #00465A);\\r\\n    padding: 7px 20px;\\r\\n    border-radius: .6em;\\r\\n    box-shadow: rgba(0, 0, 0, 1) 0 0px 0;\\r\\n    color: white;\\r\\n    font-size: 16px;\\r\\n    font-family: Arial;\\r\\n    font-weight: bold;\\r\\n    text-decoration: none;\\r\\n    vertical-align: middle;\\r\\n  }\\r\\n  .errormessages{\\r\\n    position: absolute;\\r\\n/*     border: 1px;\\r\\n    border-top-color: initial;\\r\\n    border-top-style: solid;\\r\\n    border-top-width: 1px;\\r\\n    border-right-color: initial;\\r\\n    border-right-style: solid;\\r\\n    border-right-width: 1px;\\r\\n    border-bottom-color: initial;\\r\\n    border-bottom-style: solid;\\r\\n    border-bottom-width: 1px;\\r\\n    border-left-color: initial;\\r\\n    border-left-style: solid;\\r\\n    border-left-width: 1px;\\r\\n    border-image-source: initial;\\r\\n    border-image-slice: initial;\\r\\n    border-image-width: initial;\\r\\n    border-image-outset: initial;\\r\\n    border-image-repeat: initial; */\\r\\n    padding-top: 15px;\\r\\n    padding-right: 22px;\\r\\n    padding-bottom: 15px;\\r\\n    padding-left: 3px;\\r\\n    margin: 0px;\\r\\n    left: auto;\\r\\n    right: 3px;\\r\\n    top: 55px;\\r\\n    bottom: 1px;\\r\\n    color: red;\\r\\n    height: 404.323px;\\r\\n    z-index: 0;\\r\\n    width: 210px;\\r\\n    visibility: visible;\\r\\n  }\\r\\n  .ownerErrorMessages{\\r\\n    position: relative;\\r\\n    padding-top: 0px;\\r\\n    padding-right: 22px;\\r\\n    padding-bottom: 15px;\\r\\n    padding-left: 3px;\\r\\n    margin: 0px;\\r\\n    left: 766px;\\r\\n    right: -31px;\\r\\n    top: -435px;\\r\\n    bottom: 1px;\\r\\n    color: red;\\r\\n    height: 281px;\\r\\n    z-index: 0;\\r\\n    width: 210px;\\r\\n    visibility: visible;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64, */\"","module.exports = \"<div class=\\\"pages\\\">\\n    <div class=\\\"heading\\\">Existing Applied</div>\\n    <div class=\\\"mandatory\\\">* Fields marked with an asterisk are required</div>\\n  <form [formGroup]=\\\"existingOrApplied\\\" #existingOrAppliedForm=\\\"ngForm\\\">\\n    <div [hidden]=\\\"existingOrAppliedForm.submitted\\\">\\n        <label class=\\\"radioQue\\\">\\n            Does the Proposed Insured have any existing or applied for life insurance or annuities with this or any other company?*\\n            <br>\\n            <input type=\\\"radio\\\" name=\\\"a_InforceNAppliedfor\\\" formControlName=\\\"a_InforceNAppliedfor\\\" value=\\\"Yes\\\">Yes\\n            <input type=\\\"radio\\\" name=\\\"a_InforceNAppliedfor\\\" formControlName=\\\"a_InforceNAppliedfor\\\" value=\\\"No\\\">No\\n            <div *ngIf=\\\"existingOrApplied.controls['a_InforceNAppliedfor'].invalid &&\\n            (existingOrApplied.controls['a_InforceNAppliedfor'].dirty || existingOrApplied.controls['a_InforceNAppliedfor'].touched)\\\"\\n              class=\\\"alert\\\">\\n              <div *ngIf=\\\"existingOrApplied.controls['a_InforceNAppliedfor'].errors.required\\\">\\n                Answer to Proposed Insured have any existing or applied for life insurance or annuities is required.\\n              </div>\\n            </div>\\n          </label>\\n          <label class=\\\"radioQue\\\">\\n              Has the Proposed Insured been offered any fee,payment,or incentive in connection with the purchase of this insurance policy?*\\n              <br>\\n              <input type=\\\"radio\\\" name=\\\"a_OffPaymtInd_PINS\\\" formControlName=\\\"a_OffPaymtInd_PINS\\\" value=\\\"Yes\\\">Yes\\n              <input type=\\\"radio\\\" name=\\\"a_OffPaymtInd_PINS\\\" formControlName=\\\"a_OffPaymtInd_PINS\\\" value=\\\"No\\\">No\\n              <div *ngIf=\\\"existingOrApplied.controls['a_OffPaymtInd_PINS'].invalid &&\\n              (existingOrApplied.controls['a_OffPaymtInd_PINS'].dirty || existingOrApplied.controls['a_OffPaymtInd_PINS'].touched)\\\"\\n                class=\\\"alert\\\">\\n                <div *ngIf=\\\"existingOrApplied.controls['a_OffPaymtInd_PINS'].errors.required\\\">\\n                  Answer to Proposed Insured been offered any fee,payment,or incentive in connection with the purchase of this insurance is required.\\n                </div>\\n              </div>\\n            </label>\\n            <label class=\\\"radioQue\\\">\\n                Have you ever sold or transferred a life insurance policy to a life settlement company, other secondary market provider, or any other person?*\\n                <br>\\n                <input type=\\\"radio\\\" name=\\\"a_OwnSoldTransLifeInd\\\" formControlName=\\\"a_OwnSoldTransLifeInd\\\" value=\\\"Yes\\\">Yes\\n                <input type=\\\"radio\\\" name=\\\"a_OwnSoldTransLifeInd\\\" formControlName=\\\"a_OwnSoldTransLifeInd\\\" value=\\\"No\\\">No\\n                <div *ngIf=\\\"existingOrApplied.controls['a_OwnSoldTransLifeInd'].invalid &&\\n                (existingOrApplied.controls['a_OwnSoldTransLifeInd'].dirty || existingOrApplied.controls['a_OwnSoldTransLifeInd'].touched)\\\"\\n                  class=\\\"alert\\\">\\n                  <div *ngIf=\\\"existingOrApplied.controls['a_OwnSoldTransLifeInd'].errors.required\\\">\\n                    Answer to sold or transferred a life insurance policy to a life settlement company, other secondary market provider, or any other person is required.\\n                  </div>\\n                </div>\\n              </label>\\n      <!-- <button type=\\\"submit\\\">Submit</button> -->\\n      <button type=\\\"button\\\" class=\\\"previousButton\\\" (click)=\\\"onPrev()\\\">Previous</button>\\n      <button type=\\\"button\\\" class=\\\"nextButton\\\" (click)=\\\"onNext()\\\">Next</button>\\n    </div>\\n  </form>\\n</div>\\n<div class=\\\"errormessages\\\">\\n  <ul>{{existingAppliedErrors.a_InforceNAppliedfor}}</ul>\\n  <ul>{{existingAppliedErrors.a_OffPaymtInd_PINS}}</ul>\\n  <ul>{{existingAppliedErrors.a_OwnSoldTransLifeInd}}</ul>\\n</div>\\n<!-- <div *ngIf=\\\"existingOrAppliedForm.invalid\\\">invalid form</div>\\n<div *ngIf=\\\"existingOrAppliedForm.submitted\\\">\\n  <p>You have submitted getting started screen with values</p>\\n  {{existingOrApplied.value | json}}\\n</div> -->\"","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport {attributes} from '../all-attributes';\nimport { ScreenServiceService } from 'src/app/services/screen-service.service';\n\n@Component({\n  selector: 'app-existing-applied',\n  templateUrl: './existing-applied.component.html',\n  styleUrls: ['../css/all-screens.css']\n})\nexport class ExistingAppliedComponent implements OnInit {\n  existingOrApplied : FormGroup;\n  @Output() nextScreen = new EventEmitter<String>();\n  @Input('isOwner') isOwner : boolean;\n  constructor(private fb:FormBuilder, private service: ScreenServiceService) { }\n  prefixes = [\"commander\",\"Doctor\",\"Mr.\",\"Ms\",\"Mrs.\",\"General\"];\n  ngOnInit() {\n    this.existingOrApplied = this.fb.group({\n      a_InforceNAppliedfor: ['',Validators.required],\n      a_OffPaymtInd_PINS: ['',Validators.required],\n      a_OwnSoldTransLifeInd: ['',Validators.required],\n  });\n  this.getDetails(this.existingOrApplied);\n\n  const observable = this.service.getexistingAppliedServerError();\n  const observer = {\n    next: x => {this.existingAppliedErrors=x}\n    }\n  \n  observable.subscribe(observer);\n\n}\n  \nsaveDetails() {\n  event.preventDefault();\n/*   console.log('Using JSON ');  \n  console.log(JSON.stringify(this.existingOrApplied.value));\n  Object.keys(this.existingOrApplied.controls).forEach(key => {\n    let value = this.existingOrApplied.get(key).value;\n    attributes.forEach(function (data) {\n      if (data.name == key) {\n        //console.log(key+' '+value);\n        data.value = value;\n        console.log('attributes value  ' + data.value);\n      }\n    });\n  }) */\n  this.service.postExistingApplied(JSON.parse(JSON.stringify(this.existingOrApplied.value))).subscribe();\n  \n  this.logValidationError(this.existingOrApplied);\n}\n\ngetDetails(propInsured: FormGroup) {\n/*   let existingOrAppliedMap = new Map();\n  Object.keys(propInsured.controls).forEach(key => {\n    //let  value = this.gettingStarted.get(key).value;\n    attributes.forEach(function (data) {\n      if (data.name == key) {\n        //console.log(data.name + ' ' + data.value);\n        existingOrAppliedMap.set(data.name, data.value);\n      }\n    });\n  })\n  this.existingOrApplied.patchValue({\n    a_InforceNAppliedfor: existingOrAppliedMap.get(\"a_InforceNAppliedfor\"),\n    a_OffPaymtInd_PINS: existingOrAppliedMap.get(\"a_OffPaymtInd_PINS\"),\n    a_OwnSoldTransLifeInd: existingOrAppliedMap.get(\"a_OwnSoldTransLifeInd\")\n  }) */\n  const observable = this.service.getExistingApplied();\n  const observer = {\n    next: x => {\n      this.existingOrApplied.patchValue({\n        a_InforceNAppliedfor: x.a_InforceNAppliedfor,\n        a_OffPaymtInd_PINS: x.a_OffPaymtInd_PINS,\n        a_OwnSoldTransLifeInd: x.a_OwnSoldTransLifeInd\n      });\n\n    }\n  }\n  observable.subscribe(observer);\n}\nonNext(){\n  this.nextScreen.emit('premium');\n}\nonPrev(){\n  let value = \"existing-applied\";\n  if(this.isOwner){\n    value = \"owner\";\n  }\n  else{\n    value = \"proposed-insured\";\n  }\n  this.nextScreen.emit(value);\n}\nvalidationMessages={\n  \"a_InforceNAppliedfor\": \"Answer to Proposed Insured have any existing or applied for life insurance or annuities is required.\",\n  \"a_OffPaymtInd_PINS\": \"Answer to Proposed Insured been offered any fee,payment,or incentive in connection with the purchase of this insurance is required.\",\n  \"a_OwnSoldTransLifeInd\": \"Answer to sold or transferred a life insurance policy to a life settlement company, other secondary market provider, or any other person is required.\"\n};\nexistingAppliedErrors={\n  \"a_InforceNAppliedfor\": \"\",\n  \"a_OffPaymtInd_PINS\": \"\",\n  \"a_OwnSoldTransLifeInd\": \"\"\n};\nlogValidationError(group:FormGroup){\n  Object.keys(group.controls).forEach((\n    key :string) =>{\n      const abstractcontrol = group.get(key);\n      \n      this.existingAppliedErrors[key]='';\n      if(abstractcontrol && !abstractcontrol.valid){\n        this.existingAppliedErrors[key]=this.validationMessages[key];\n      }\n    }\n  )\n  this.service.postexistingAppliedServerError(JSON.parse(JSON.stringify(this.existingAppliedErrors))).subscribe();\n}\n}\n","module.exports = \"<div class=\\\"pages\\\">\\n  <div class=\\\"heading\\\">Getting Started</div>\\n  <div class=\\\"mandatory\\\">* Fields marked with an asterisk are required</div><br>\\n  <form [formGroup]=\\\"gettingStarted\\\" #gettingStartedForm=\\\"ngForm\\\">\\n    <div [hidden]=\\\"gettingStartedForm.submitted\\\">\\n      <label for=\\\"Application_CRDA\\\">\\n        Application CRDA:<span style=\\\"color: red; font-weight: bold;vertical-align: top\\\" class=\\\"mandatory\\\">*</span>\\n        <input id=\\\"Application_CRDA\\\" #AppCRDA [textMask]=\\\"{mask:maskAppCRDA,guide:true,keepCharPositions:true}\\\"\\n          type=\\\"text\\\" (blur)=\\\"validateGettingStarted(AppCRDA.value)\\\" formControlName=\\\"Application_CRDA\\\">\\n        <!--<div *ngIf=\\\"gettingStarted.controls['Application_CRDA'].invalid &&\\n        (gettingStarted.controls['Application_CRDA'].dirty || gettingStarted.controls['Application_CRDA'].touched)\\\"\\n          class=\\\"alert\\\">\\n          <div *ngIf=\\\"gettingStarted.controls['Application_CRDA'].errors.required\\\">\\n            Application CRDA is missing.\\n          </div>\\n        </div> -->\\n        <div class=\\\"alert\\\">{{formerrors}}</div>\\n      </label>\\n\\n      <label class=\\\"radioQue\\\">\\n        Is this application being completed in the United States?*\\n        <br>\\n        <input type=\\\"radio\\\" name=\\\"appcompletedinUS\\\" formControlName=\\\"appcompletedinUS\\\" value=\\\"Yes\\\">Yes\\n        <input type=\\\"radio\\\" name=\\\"appcompletedinUS\\\" formControlName=\\\"appcompletedinUS\\\" value=\\\"No\\\">No\\n        <div *ngIf=\\\"gettingStarted.controls['appcompletedinUS'].invalid &&\\n        (gettingStarted.controls['appcompletedinUS'].dirty || gettingStarted.controls['appcompletedinUS'].touched)\\\"\\n          class=\\\"alert\\\">\\n          <div *ngIf=\\\"gettingStarted.controls['appcompletedinUS'].errors.required\\\">\\n            Answer to Application completed in the United States is missing.\\n          </div>\\n        </div>\\n      </label>\\n\\n      <label class=\\\"radioQue\\\">\\n        Will the Owner of the Policy be someone other than the Proposed Insured?*\\n        <br>\\n        <input #showOwnVal type=\\\"radio\\\" name=\\\"ownerOtherThanPI\\\" formControlName=\\\"ownerOtherThanPI\\\"\\n          (change)=\\\"showHideOwner(showOwnVal.value)\\\" value=\\\"Yes\\\">Yes\\n        <input #hideOwnVal type=\\\"radio\\\" name=\\\"ownerOtherThanPI\\\" formControlName=\\\"ownerOtherThanPI\\\"\\n          (change)=\\\"showHideOwner(hideOwnVal.value)\\\" value=\\\"No\\\">No\\n        <div *ngIf=\\\"gettingStarted.controls['ownerOtherThanPI'].invalid &&\\n        (gettingStarted.controls['ownerOtherThanPI'].dirty || gettingStarted.controls['ownerOtherThanPI'].touched)\\\"\\n          class=\\\"alert\\\">\\n          <div *ngIf=\\\"gettingStarted.controls['ownerOtherThanPI'].errors.required\\\">\\n            Answer to Owner of the Policy be someone other than the Proposed Insured is missing.\\n          </div>\\n        </div>\\n      </label>\\n\\n      <label>\\n        Product:*\\n        <select formControlName=\\\"product\\\">\\n          <option>BrightHouse Smartcare</option>\\n        </select>\\n        <div *ngIf=\\\"gettingStarted.controls['product'].invalid &&\\n        (gettingStarted.controls['product'].dirty || gettingStarted.controls['product'].touched)\\\" class=\\\"alert\\\">\\n          <div *ngIf=\\\"gettingStarted.controls['product'].errors.required\\\">\\n            Product is missing.\\n          </div>\\n        </div>\\n      </label>\\n\\n      <label>\\n        Premium Mode:*\\n        <select formControlName=\\\"premiumMode\\\">\\n          <option *ngFor=\\\"let premiumMode of premiumModes\\\" [value]=\\\"premiumMode\\\">{{premiumMode}}</option>\\n        </select>\\n        <div *ngIf=\\\"gettingStarted.controls['premiumMode'].invalid &&\\n        (gettingStarted.controls['premiumMode'].dirty || gettingStarted.controls['premiumMode'].touched)\\\"\\n          class=\\\"alert\\\">\\n          <div *ngIf=\\\"gettingStarted.controls['premiumMode'].errors.required\\\">\\n            Premium Mode is missing.\\n          </div>\\n        </div>\\n      </label>\\n\\n      <label>\\n        NIPR Number:*\\n        <input type=\\\"text\\\" formControlName=\\\"niprNum\\\" appOnlyNumber>\\n        <div *ngIf=\\\"gettingStarted.controls['niprNum'].invalid &&\\n         (gettingStarted.controls['niprNum'].dirty || gettingStarted.controls['niprNum'].touched)\\\" class=\\\"alert\\\">\\n          <div *ngIf=\\\"gettingStarted.controls['niprNum'].errors.required\\\">\\n            NIPR is missing.\\n          </div>\\n        </div>\\n      </label>\\n      <label>\\n        Premium Amount:\\n        <input type=\\\"text\\\" #premAmt formControlName=\\\"preAmount\\\" appOnlyNumber (blur)=\\\"formateCurrency(premAmt)\\\">\\n      </label>\\n      <label>\\n        Face Amount:\\n        <input type=\\\"text\\\" #faceAmt formControlName=\\\"faceAmount\\\" appOnlyNumber (blur)=\\\"formateCurrency(faceAmt)\\\">\\n      </label>\\n      <label class=\\\"radioQue\\\">\\n        Is there an Illustration PDF attached with the Application Packet?*\\n        <br>\\n        <input type=\\\"radio\\\" name=\\\"illustrationPDF\\\" formControlName=\\\"illustrationPDF\\\" (change)=\\\"showHideAmount($event)\\\"\\n          value=\\\"Yes\\\">Yes\\n        <input type=\\\"radio\\\" name=\\\"illustrationPDF\\\" formControlName=\\\"illustrationPDF\\\" (change)=\\\"showHideAmount($event)\\\"\\n          value=\\\"No\\\">No\\n        <div *ngIf=\\\"gettingStarted.controls['illustrationPDF'].invalid &&\\n        (gettingStarted.controls['illustrationPDF'].dirty || gettingStarted.controls['illustrationPDF'].touched)\\\"\\n          class=\\\"alert\\\">\\n          <div *ngIf=\\\"gettingStarted.controls['illustrationPDF'].errors.required\\\">\\n            Answer to Is there an Illustration PDF attached with the Application Packet is missing.\\n          </div>\\n        </div>\\n      </label>\\n      <label for=\\\"lumpsum\\\"\\n        [style.display]=\\\"gettingStarted.controls['illustrationPDF'].value == 'Yes' ? 'block' : 'none' \\\">\\n        Planned First Year Lump Sum:*\\n        <input id=\\\"lumpsum\\\" appOnlyNumber type=\\\"text\\\" #lumpsum formControlName=\\\"lumpsum\\\"\\n          (blur)=\\\"formateCurrency(lumpsum)\\\">\\n        <div *ngIf=\\\"gettingStarted.controls['lumpsum']?.invalid &&\\n        (gettingStarted.controls['lumpsum'].dirty || gettingStarted.controls['lumpsum'].touched)\\\" class=\\\"alert\\\">\\n          <div *ngIf=\\\"gettingStarted.controls['lumpsum'].errors.required\\\">\\n            Planned First Year Lump Sum Amount is missing.\\n          </div>\\n        </div>\\n      </label>\\n      <label for=\\\"singlePremium\\\"\\n        [style.display]=\\\"gettingStarted.controls['illustrationPDF'].value == 'Yes' ? 'block' : 'none' \\\">\\n        Planned Single Premium:*\\n        <input id=\\\"singlePremium\\\" #singlePrem appOnlyNumber type=\\\"text\\\" formControlName=\\\"singlePremium\\\"\\n          (blur)=\\\"formateCurrency(singlePrem)\\\">\\n        <div *ngIf=\\\"gettingStarted.controls['singlePremium']?.invalid &&\\n        (gettingStarted.controls['singlePremium'].dirty || gettingStarted.controls['singlePremium'].touched)\\\"\\n          class=\\\"alert\\\">\\n          <div *ngIf=\\\"gettingStarted.controls['singlePremium'].errors.required\\\">\\n            Planned Single Premium Amount is missing.\\n          </div>\\n        </div>\\n      </label>\\n\\n    </div>\\n    <!-- <button type=\\\"button\\\" class=\\\"\\\" (click)=\\\"saveDetails()\\\">Submit</button> -->\\n    <button type=\\\"button\\\" class=\\\"nextButton\\\" (click)=\\\"onNext()\\\">Next</button>\\n  </form>\\n</div>\\n<div class=\\\"errormessages\\\">\\n  <ul>{{gettingstartedErrors.Application_CRDA}}</ul>\\n  <ul>{{gettingstartedErrors.appcompletedinUS}}</ul>\\n  <ul>{{gettingstartedErrors.ownerOtherThanPI}}</ul>\\n  <ul>{{gettingstartedErrors.product}}</ul>\\n  <ul>{{gettingstartedErrors.niprNum}}</ul>\\n  <ul>{{gettingstartedErrors.illustrationPDF}}</ul>\\n  <ul>{{gettingstartedErrors.premiumMode}}</ul>\\n  <ul>{{gettingstartedErrors.lumpsum}}</ul>\\n  <ul>{{gettingstartedErrors.singlePremium}}</ul>\\n</div>\\n<!--<div *ngIf=\\\"gettingStartedForm.invalid\\\">invalid form</div>\\n<div *ngIf=\\\"gettingStartedForm.submitted\\\">\\n  <p>You have submitted getting started screen with values</p>\\n  {{gettingStarted.value | json}}\\n</div> -->\"","import { Component, OnInit, Output, EventEmitter, Input,OnChanges, SimpleChanges } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl } from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport { CurrencyPipe, JsonPipe } from '@angular/common';\nimport { ScreenServiceService } from 'src/app/services/screen-service.service';\n\n@Component({\n  selector: 'app-getting-started',\n  templateUrl: './getting-started.component.html',\n  styleUrls: ['../css/all-screens.css'],\n})\n\nexport class GettingStartedComponent implements OnInit {\n\n  gettingStarted: FormGroup;\n@Input() selectedScreen : String;\n  formerrors: {};\n  ngOnInit() {\n    this.gettingStarted = this.fb.group({\n      Application_CRDA: ['', Validators.required],\n      appcompletedinUS: ['', Validators.required],\n      ownerOtherThanPI: ['', Validators.required],\n      product: ['', Validators.required],\n      niprNum: ['', Validators.required],\n      preAmount: [''],\n      faceAmount: [''],\n      illustrationPDF: ['', Validators.required],\n      premiumMode: ['', Validators.required],\n      lumpsum: ['', Validators.required],\n      singlePremium: ['', Validators.required],\n\n    });\n    this.gettingStarted.get(\"Application_CRDA\").valueChanges.subscribe(data => { this.validateGettingStarted(data) });\n    //this.validateGettingStarted(data);\n/*     this.gettingStarted.valueChanges.subscribe(() => {\n      this.logValidationError(this.gettingStarted);\n    }) */\n    this.getDetails(this.gettingStarted);\n    //this.logValidationError(this.gettingStarted);\n    this.gettingStarted.get(\"illustrationPDF\").valueChanges.subscribe(\n      data => {\n      if(data != \"Yes\"){\n        this.gettingStarted.removeControl('singlePremium');\n        this.gettingStarted.removeControl('lumpsum'); \n      }\n      else {\n        this.gettingStarted.addControl('singlePremium',new FormControl('', Validators.required));\n        this.gettingStarted.addControl('lumpsum',new FormControl('', Validators.required)); \n      }\n\n      }); \n    const observable = this.service.getGettingStartedServerError();\n    const observer = {\n      next: x => {this.gettingstartedErrors=x}\n      }\n    \n    observable.subscribe(observer);\n\n  }\n\n  constructor(private fb: FormBuilder, private currency: CurrencyPipe,private service : ScreenServiceService) { }\n  @Output() PIotherThanOwn = new EventEmitter<String>();\n  @Output() nextScreen = new EventEmitter<String>();\n  premiumModes = [\"Single Payment\", \"Annual\", \"Semi-Annual\", \"Quarterely\", \"Monthly\"];\n  maskAppCRDA = [/\\d/, /\\d/, /\\d/, /\\d/, '-', /[0-1]/, /\\d/, '-', /[0-3]/, /\\d/, '-', /[0-5]/, /\\d/, '-', /[A-Za-z0-9]/, /[A-Za-z0-9]/, /[A-Za-z0-9]/, /[A-Za-z0-9]/, 'C01']\n\n  showHideOwner(value: String) {\n\n    this.PIotherThanOwn.emit(value);\n  }\n  validateGettingStarted(data: String) {\n    if (data == \"\") {\n      this.formerrors = \"Application CRDA is missing.\";\n    }\n/*     else if (data.includes(\"_\")) {\n      data = \"\";\n      this.formerrors = \"Application CRDA is missing.\";\n    } */\n    else {\n      this.formerrors = \"\";\n    }\n  }\n  showHideAmount(event: any) {\n    if (event.target.value == \"Yes\") {\n\n      this.gettingStarted.addControl('lumpsum', new FormControl('', Validators.required));\n      this.gettingStarted.addControl('singlePremium', new FormControl('', Validators.required));\n      //  this.gettingStarted.controls['lumpsum'].reset();\n      // this.gettingStarted.controls['singlePremium'].reset();\n\n    }\n    else {\n\n      this.gettingStarted.removeControl('lumpsum');\n      this.gettingStarted.removeControl('singlePremium');\n    }\n  }\n  formateCurrency(event: HTMLInputElement) {\n    let formctrlname = event.getAttribute(\"formControlName\");\n    let amount = parseInt(event.value.replace(/[^0-9.-]+/g,\"\")); \n    switch (formctrlname) {\n      case \"preAmount\": {\n        this.gettingStarted.patchValue({\n          preAmount: this.currency.transform(amount, 'USD')\n        });\n        break;\n      }\n      case \"faceAmount\": {\n        this.gettingStarted.patchValue({\n          faceAmount: this.currency.transform(amount, 'USD')\n        });\n        break;\n      }\n      case \"lumpsum\": {\n        this.gettingStarted.patchValue({\n          lumpsum: this.currency.transform(amount, 'USD')\n        });\n        break;\n      }\n      case \"singlePremium\": {\n        this.gettingStarted.patchValue({\n          singlePremium: this.currency.transform(amount, 'USD')\n        });\n        break;\n      }\n    }\n  }\n  saveDetails(){\n    //event.preventDefault();\n/*     console.log(JSON.stringify(this.gettingStarted.value));\n    Object.keys(this.gettingStarted.controls).forEach(key =>{\n      let  value = this.gettingStarted.get(key).value;\n        attributes.forEach(function(data){\n          if(data.name == key){\n            //console.log(key+' '+value);\n            data.value = value; \n            //console.log('attributes value  '+data.value);\n          }        \n        }); \n      })\n       */\n    // const gettingstartedObservable = of(JSON.stringify(this.gettingStarted.value));\n  //  console.log('getting started value  '+JSON.parse(JSON.stringify(this.gettingStarted.value)));\n     this.service.postGettingStarted(JSON.parse(JSON.stringify(this.gettingStarted.value))).subscribe();\n     \n   //  console.log('getting started value '+JSON.stringify(this.gettingStarted.get('illustrationPDF').value));\n/*      if(this.gettingStarted.get('illustrationPDF').value != \"Yes\"){\n       \n       this.gettingStarted.removeControl('singlePremium');\n       this.gettingStarted.removeControl('lumpsum');\n      console.log('control removed');\n      } */\n      this.logValidationError(this.gettingStarted); \n    }\n\n  getDetails(gettStarted : FormGroup){\n /*    let gettingstartedMap = new Map();\n    Object.keys(gettStarted.controls).forEach(key =>{\n      //let  value = this.gettingStarted.get(key).value;\n        attributes.forEach(function(data){\n          if(data.name == key){\n            //console.log(data.name+' '+data.value);\n            gettingstartedMap.set(data.name,data.value);\n          }        \n        }); \n      })\n      this.gettingStarted.patchValue({\n        Application_CRDA : gettingstartedMap.get(\"Application_CRDA\"),\n        appcompletedinUS : gettingstartedMap.get(\"appcompletedinUS\"),\n        ownerOtherThanPI : gettingstartedMap.get(\"ownerOtherThanPI\"),\n        product : gettingstartedMap.get(\"product\"),\n        premiumMode : gettingstartedMap.get(\"premiumMode\"),\n        niprNum : gettingstartedMap.get(\"niprNum\"),\n        preAmount : gettingstartedMap.get(\"preAmount\"),\n        faceAmount : gettingstartedMap.get(\"faceAmount\"),\n        illustrationPDF : gettingstartedMap.get(\"illustrationPDF\"),\n        singlePremium : gettingstartedMap.get(\"singlePremium\"),\n        lumpsum : gettingstartedMap.get(\"lumpsum\")\n      }) */\n   //this.service.getGettingStarted().forEach(data=>{console.log(data)});\n   const observable =  this.service.getGettingStarted();\n    const observer = {\n      next: x => {\n        this.gettingStarted.patchValue({\n          Application_CRDA : x.Application_CRDA,\n          appcompletedinUS : x.appcompletedinUS,\n          ownerOtherThanPI : x.ownerOtherThanPI,\n          product : x.product,\n          premiumMode : x.premiumMode,\n          niprNum : x.niprNum,\n          preAmount : x.preAmount,\n          faceAmount : x.faceAmount,\n          illustrationPDF : x.illustrationPDF,\n          lumpsum : x.lumpsum,\n          singlePremium : x.singlePremium\n          \n        })\n       this.showHideOwner(x.ownerOtherThanPI);\n      }\n    };\n   observable.subscribe(observer);\n  }\n  onNext(){\n    \n    let value = \"proposed-insured\";\n    this.nextScreen.emit(value);\n  }\n  validationMessages={\n    'Application_CRDA': 'Application CRDA is missing',\n    'appcompletedinUS': 'Answer to Application completed in the United States is missing.',\n    'ownerOtherThanPI': 'Answer to Owner of the Policy be someone other than the Proposed Insured is missing.',\n    'product': 'Product is missing.',\n    'niprNum': 'NIPR is missing.',\n    'illustrationPDF': 'Answer to Is there an Illustration PDF attached with the Application Packet is missing.',\n    'premiumMode': 'Premium Mode is missing.',\n    'lumpsum': 'Planned First Year Lump Sum Amount is missing.',\n    'singlePremium': 'Planned Single Premium Amount is missing.'\n  };\n  gettingstartedErrors={\n    'Application_CRDA': '',\n    'appcompletedinUS': '',\n    'ownerOtherThanPI': '',\n    'product': '',\n    'niprNum': '',\n    'illustrationPDF': '',\n    'premiumMode': '',\n    'lumpsum': '',\n    'singlePremium': ''\n  };\n  logValidationError(group:FormGroup){\n    Object.keys(group.controls).forEach((\n      key :string) =>{\n        const abstractcontrol = group.get(key);\n        \n        this.gettingstartedErrors[key]='';\n        if(abstractcontrol && !abstractcontrol.valid){\n          this.gettingstartedErrors[key]=this.validationMessages[key];\n        }\n      }\n    )\n    if(group.get('illustrationPDF').value != \"Yes\"){\n      this.gettingstartedErrors.lumpsum=\"\";\n      this.gettingstartedErrors.singlePremium=\"\";\n    }\n    this.service.postGettingStartedServerError(JSON.parse(JSON.stringify(this.gettingstartedErrors))).subscribe();\n  }\n}\n","module.exports = \"<div class=\\\"pages\\\">\\n    <div class=\\\"heading\\\">Owner</div>\\n    <div class=\\\"mandatory\\\">* Fields marked with an asterisk are required</div>\\n  <form [formGroup]=\\\"owner\\\" #ownerForm=\\\"ngForm\\\">\\n    <div formArrayName=\\\"owners\\\">\\n      <button (click)=\\\"addOwner()\\\" [disabled]=\\\"ownersArray.length>4\\\">Add</button>\\n      <div *ngFor=\\\"let ctrl of ownersArray.controls; let i=index\\\">\\n        <div [formGroupName]=\\\"i\\\">\\n          <label>\\n            Prefix:\\n            <select formControlName=\\\"prefix\\\">\\n              <option *ngFor=\\\"let prefix of prefixes\\\" [value]=\\\"prefix\\\">{{prefix}}</option>\\n            </select>\\n\\n          </label>\\n          <label>\\n            First Name:*\\n            <input type=\\\"text\\\" formControlName=\\\"firstName\\\" [id]=\\\"'firstName'+i\\\">\\n\\n            <div *ngIf=\\\"ctrl.get('firstName').invalid &&\\n                 (ctrl.get('firstName').dirty || ctrl.get('firstName').touched)\\\" class=\\\"alert\\\">\\n              <div *ngIf=\\\"ctrl.get('firstName').errors.required\\\"></div>\\n              First Name {{i+1}} is required.\\n            </div>\\n          </label>\\n          <label>\\n            Middle Name:\\n            <input type=\\\"text\\\" formControlName=\\\"middleName\\\" maxlength=\\\"1\\\">\\n          </label>\\n          <label>\\n            Last Name:*\\n            <input type=\\\"text\\\" formControlName=\\\"lastName\\\">\\n\\n            <div *ngIf=\\\"ctrl.get('lastName').invalid &&\\n          (ctrl.get('lastName').dirty || ctrl.get('lastName').touched)\\\" class=\\\"alert\\\">\\n              <div *ngIf=\\\"ctrl.get('lastName').errors.required\\\">\\n                Last Name {{i+1}} is required.\\n              </div>\\n            </div>\\n          </label>\\n          <label>\\n            Permanent Address:*\\n            <input type=\\\"text\\\" formControlName=\\\"permanentAddress\\\">\\n\\n            <div *ngIf=\\\"ctrl.get('permanentAddress').invalid &&\\n    (ctrl.get('permanentAddress').dirty || ctrl.get('permanentAddress').touched)\\\" class=\\\"alert\\\">\\n              <div *ngIf=\\\"ctrl.get('permanentAddress').errors.required\\\">\\n                Permanent Address {{i+1}} is required.\\n              </div>\\n            </div>\\n          </label>\\n          <label>\\n            Date Of Birth:*\\n            <input type=\\\"date\\\" #dob formControlName=\\\"dateofBirth\\\" (keyup)=\\\"validatedate(dob.value)\\\">\\n            <div *ngIf=\\\"ctrl.get('dateofBirth').invalid &&\\n      (ctrl.get('dateofBirth').dirty || ctrl.get('dateofBirth').touched)\\\" class=\\\"alert\\\">\\n              <div *ngIf=\\\"ctrl.get('dateofBirth').errors.required\\\">\\n                Date of birth {{i+1}} is required.\\n              </div>\\n              \\n            </div>\\n            <div class=\\\"alert\\\" >{{invalidDate}}</div>\\n          </label>\\n\\n          <label>\\n            Social Security Number:*\\n            <input type=\\\"text\\\" formControlName=\\\"ssn\\\">\\n            <div *ngIf=\\\"ctrl.get('ssn').invalid &&\\n      (ctrl.get('ssn').dirty || ctrl.get('ssn').touched)\\\" class=\\\"alert\\\">\\n              <div *ngIf=\\\"ctrl.get('ssn').errors.required\\\">\\n                SSN {{i+1}} is required.\\n              </div>\\n            </div>\\n          </label>\\n\\n          <button (click)=\\\"removeOwner(i,ctrl.get('id').value)\\\" [disabled]=\\\"(owner.get('owners').length)==1\\\">Delete</button>\\n        </div>\\n\\n\\n      </div>\\n      <!-- <button type=\\\"submit\\\">Submit</button> -->\\n      <button type=\\\"button\\\" class=\\\"previousButton\\\" (click)=\\\"onPrev()\\\">Previous</button>\\n      <button type=\\\"button\\\" class=\\\"nextButton\\\" (click)=\\\"onNext()\\\">Next</button>\\n    </div>\\n  </form>\\n</div>\\n<div class=\\\"ownerErrorMessages\\\" *ngFor=\\\"let error of ownerErrorsArray\\\">\\n<ul>{{error.firstName}}</ul>\\n<ul>{{error.lastName}}</ul>\\n<ul>{{error.permanentAddress}}</ul>\\n<ul>{{error.dateofBirth}}</ul>\\n<ul>{{error.ssn}}</ul>\\n</div>\\n<!--<div *ngIf=\\\"ownerForm.submitted\\\">\\n  <p>You have submitted Owner screen with values</p>\\n  {{owner.value | json}}\\n</div>-->\"","import { Component, OnInit, Output,EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray, FormControl } from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport {attributes} from '../all-attributes';\nimport {attribute} from '../attribute';\nimport { ScreenServiceService } from 'src/app/services/screen-service.service';\nimport { Observable, observable, Subscription } from 'rxjs';\n//import {all-screens} from '../css';\n@Component({\n  selector: 'app-owner',\n  templateUrl: './owner.component.html',\n  styleUrls: ['../css/all-screens.css']\n})\nexport class OwnerComponent implements OnInit {\n  owner : FormGroup;\n  @Output() prevScreen = new EventEmitter<String>();\n  @Output() nextScreen = new EventEmitter<String>();\n  index : number;\n  constructor(private fb:FormBuilder,private service : ScreenServiceService) { }\n  prefixes = [\"commander\",\"Doctor\",\"Mr.\",\"Ms\",\"Mrs.\",\"General\"];\n  ngOnInit() {\n//(<FormArray>this.owner.get(\"owners\")).at(0).valueChanges.subscribe(data => this.validatedate(data));\n//this.validateOwnerForm();\n  //  this.owner = this.ownerGroup();\n  this.owner = this.fb.group({\n    owners :this.fb.array([\n     this.ownerGroup()\n    ])\n          \n});\nthis.index =1;\nthis.getDetails(this.owner);\nthis.ownerErrorsArray =[];\nconst observable = this.service.getownerServerError();\n    const observer = {\n      next: x => { this.ownerErrorsArray=x;}\n      }\n    \n    observable.subscribe(observer);\n}\n  ownerGroup() : FormGroup{ \n    return this.fb.group({\n    prefix: [''],\n    firstName: ['',Validators.required],\n    middleName: ['',Validators.maxLength(1)],\n    lastName: ['',Validators.required],\n    permanentAddress: ['',Validators.required],\n    dateofBirth: ['',Validators.required],\n    ssn: ['',Validators.required] ,\n    id:['']\n  });\n}\ngetOwnerCount():number{\n  let ownercount = 0;\n  attributes.forEach(data=> {\n    if(data.name.substring(0,12) == 'prefix_owner'){\n    ownercount++;\n    }\n  });\n  return ownercount;\n}\nsaveDetails() {\n  event.preventDefault();\n  \n  /* console.log('Using JSON ');  \n  console.log(JSON.stringify(this.owner.value));\n    let owners = (<FormArray>this.owner.get('owners'));\n    let index =0;\n  let ownercount =this.getOwnerCount();\n  for( let owner of owners.controls ){\n\n      Object.keys(owner.value).forEach(key => {\n    let value = (<FormGroup>owner).get(key).value;\n\n     if(index>=ownercount){\n    attributes.push(new attribute(key+'_owner_'+index,value));\n     }\n     else{\n       attributes.forEach(data=>{\n        if(data.name==key+'_owner_'+index){\n          data.value = value;\n        }\n       })\n     }\n\n  })\n  index++;\n  }\n */\n//console.log('owner value  '+JSON.stringify(this.ownersArray.value));\n//this.service.postOwner(JSON.parse(JSON.stringify(this.ownersArray.value))).subscribe();\nlet owners = (<FormArray>this.owner.get('owners'));\n //let observable = new Observable<JSON>();\n // subscription : Subscription;\nfor( let owner of owners.controls ){\n  if(owner.get(\"id\").value == ''){\n    const observable =  this.service.postOwner(owner.value);\n    const observer = {\n      next: x => {\n        const error = this.ownerErrors();\n        error.id = x.id;\n        owner.get(\"id\").setValue(x.id);\n        this.service.postOwnerServerError(JSON.parse(JSON.stringify(error))).subscribe();\n        this.logValidationError(<FormGroup>owner,this.index,x.id);\n      }\n    };\n    observable.subscribe(observer);\n    \n    //this.service.postOwner(owner.value).subscribe(data =>{console.log(JSON.stringify(data))});\n  }else{\n    this.service.putOwner(owner.value,owner.get(\"id\").value).subscribe();\n    this.logValidationError(<FormGroup>owner,this.index,owner.get(\"id\").value);\n  }\n \n}\n//this.logValidationError(owners);\n}\n\ngetDetails(ownerGroupParam : FormGroup) {\n  let ownerGroupMap = new Map();\n  let ownerCount = this.getOwnerCount();\n \n  let  ownerArray = this.fb.array([]);\n               // console.log('owner length '+this.ownersArray.length); \n              \n let ownerMap = new Map();\n/* if(ownerCount!=0){\n  for(let i=0;i<ownerCount;i++){\n    //let  value = this.gettingStarted.get(key).value;\n    //let ownerGroup =  <FormGroup>(<FormArray>this.owner.get('owners')).controls[i];\n    \n    let localOwnerGroup = this.ownerGroup();\n    Object.keys(localOwnerGroup.controls).forEach(key => {\n      attributes.forEach(function(data){\n        if(data.name == key+'_owner_'+i){\n          ownerMap.set(data.name,data.value);\n          switch(key){\n            case \"prefix\" : {localOwnerGroup.patchValue({prefix : data.value}); break;}\n            case \"firstName\" : {localOwnerGroup.patchValue({firstName : data.value}); break;}\n            case \"middleName\" : {localOwnerGroup.patchValue({middleName : data.value}); break;}\n            case \"lastName\" : {localOwnerGroup.patchValue({lastName : data.value}); break;}\n            case \"permanentAddress\" : {localOwnerGroup.patchValue({permanentAddress : data.value}); break;}\n            case \"dateofBirth\" : {localOwnerGroup.patchValue({dateofBirth : data.value}); break;}\n            case \"ssn\" : {localOwnerGroup.patchValue({ssn : data.value}); break;}\n          }\n        }\n      })\n    })\n    \n    ownerArray.insert(i,localOwnerGroup);\n\n   \n  }\nthis.owner = this.fb.group({\n  owners :   ownerArray\n});\n}\n */const observable =  this.service.getOwner();\n    const observer = {\n      next: x => {\n       // console.log('length in obeserver ' + JSON.stringify(x.length));\n        let lengthowner=JSON.stringify(x.length);\n        x.forEach(element => {\n          let localOwnerGroup = this.ownerGroup();\n          localOwnerGroup.patchValue({\n          prefix: element.prefix,\n          firstName: element.firstName,\n          middleName: element.middleName,\n          lastName: element.lastName,\n          permanentAddress: element.permanentAddress,\n          dateofBirth: element.dateofBirth,\n          ssn: element.ssn ,\n          id:element.id\n          })\n          //console.log('owner in get '+JSON.stringify( localOwnerGroup.value));\n           \n          ownerArray.push(localOwnerGroup);\n        });\n        if(JSON.stringify(x.length) == \"0\")\n        ownerArray.push(this.ownerGroup());\n        this.owner = this.fb.group({\n          owners :   ownerArray\n        });\n/*         this.owner.patchValue({\n          prefix: x.prefix,\n          firstName: x.firstName,\n          middleName: x.middleName,\n          lastName: x.lastName,\n          permanentAddress: x.permanentAddress,\n          dateofBirth: x.dateofBirth,\n          ssn: x.ssn\n        }) */\n\n}\n    }\n    observable.subscribe(observer);\n  }\n\nget ownersArray(){\n  return this.owner.controls['owners'] as FormArray;\n}\n\n\naddOwner(){\n  (<FormArray>this.owner.get('owners')).push(this.ownerGroup());\n // this.service.postOwner(JSON.parse(JSON.stringify(this.ownerGroup().value))).subscribe();\n}\n\nremoveOwner(location:number,index: number){\n  this.ownersArray.removeAt(location);\n  let index1 = attributes.findIndex(function(attribute){return (attribute.name.substr(-2,2)==\"_\"+index)})\n  // delete all attributes for deleted block\n  attributes.splice(index1,7);\n  if(index1>0 && index1!=attributes.length){\n    attributes.forEach(data=>{\n      if(data.name.substr(-2,2) == \"_\"+(index+1)){\n        data.name = data.name.substr(-(data.name.length),data.name.length-1)+index;\n      }\n    })\n  }\nthis.service.deleteOwner(index).subscribe();\nthis.service.deleteOwnerServerError(index).subscribe();\n}\n\ninvalidDate  : {}\nvalidatedate(date : String){\n  //console.log(this.ownersArray.at(index).get(\"dateofBirth\").value);\n  let year = parseInt(date.split(\"-\")[0]);\n  if(year<1900 || year >2099){\n    // console.log('Please enter a valid date')\n    \n    this.invalidDate = \"Please enter a valid date\";\n  }\n  else{\n    this.invalidDate = \"\";\n  }\n}\nonPrev(){\n  let value = \"proposed-insured\";\n  this.prevScreen.emit(value);\n}\nonNext(){\n    \n  let value = \"existing-applied\";\n  this.nextScreen.emit(value);\n}\nvalidationMessages = {\n  \"firstName\": \"First Name\",\n  \"lastName\": \"Last Name\",\n  \"permanentAddress\": \"Permanent Address\",\n  \"dateofBirth\": \"Date of birth\",\n  \"ssn\": \"SSN\"\n}\nerrorMessages = {\n  \"firstName\": \"First Name\",\n  \"lastName\": \"Last Name\",\n  \"permanentAddress\": \"Permanent Address\",\n  \"dateofBirth\": \"Date of birth\",\n  \"ssn\": \"SSN\"\n}\nownerErrors() : any {\n  var errors = {\n    \"firstName\" : \"\",\n    \"lastName\": \"\",\n    \"permanentAddress\": \"\",\n    \"dateofBirth\": \"\",\n    \"ssn\": \"\",\n    \"id\":\"\"\n  }\nreturn errors;\n};\nownerErrorsArray = [] ;\nlogValidationError(owner:FormGroup,index:number,id:number){\n  Object.keys((<FormGroup>owner).controls).forEach((\n    key :string) =>{\n      const abstractcontrol = owner.get(key);\n      this.errorMessages[key]='';\n      if(abstractcontrol && !abstractcontrol.valid){\n        this.errorMessages[key]=this.validationMessages[key]+' '+index+' is required';\n      // console.log(this.ownerErrors[key]);\n      // this.ownersErrors.push(this.validationMessages[key]+' '+index+' is required');\n      }\n    }\n  )\n  this.service.putOwnerServerError(JSON.parse(JSON.stringify(this.errorMessages)),parseInt(owner.get(\"id\").value)).subscribe();\n  this.index++;  \n  //console.log('put server success')\n  // this.ownerErrors.id = owner.get(\"id\").value; \n    //this.ownersErrors.push(this.ownerErrors);\n/*     if(this.ownerErrors.id == '')\n    this.service.postOwnerServerError(JSON.parse(JSON.stringify(this.ownerErrors))).subscribe();\n    else\n    this.service.putOwnerServerError(JSON.parse(JSON.stringify(this.ownerErrors)),parseInt(this.ownerErrors.id)).subscribe();\n */\n \n  //console.log(this.ownersErrors);\n  \n}\n}\n","module.exports = \"<div class=\\\"pages\\\">\\n    <div class=\\\"heading\\\">Premium</div>\\n    <div class=\\\"mandatory\\\">* Fields marked with an asterisk are required</div>\\n  <form [formGroup]=\\\"premium\\\" #premiumForm=\\\"ngForm\\\">\\n    <div [hidden]=\\\"premiumForm.submitted\\\">\\n      <label>\\n        Payor Details:\\n      </label>\\n      <label>\\n        Premium Payor:*\\n        <select formControlName=\\\"premium_payors\\\">\\n          <option *ngFor=\\\"let payor of premium_payors\\\" [value]=\\\"payor\\\">{{payor}}</option>\\n        </select>\\n        <div *ngIf=\\\"premium.controls['premium_payors'].invalid &&\\n            (premium.controls['premium_payors'].dirty || premium.controls['premium_payors'].touched)\\\" class=\\\"alert\\\">\\n          <div *ngIf=\\\"premium.controls['premium_payors'].errors.required\\\">\\n            Premium Payor is missing.\\n          </div>\\n        </div>\\n      </label>\\n      <label>\\n        Payment Mode:*\\n        <select formControlName=\\\"paymentMode\\\">\\n          <option *ngFor=\\\"let paymentMode of paymentModes\\\" [value]=\\\"paymentMode\\\">{{paymentMode}}</option>\\n        </select>\\n     <div *ngIf=\\\"premium.controls['paymentMode'].invalid &&\\n        (premium.controls['paymentMode'].dirty || premium.controls['paymentMode'].touched)\\\" class=\\\"alert\\\">\\n          <div *ngIf=\\\"premium.controls['paymentMode'].errors.required\\\">\\n            Payment Mode is missing.\\n          </div>\\n        </div>\\n      </label>\\n<!--       <label>\\n          Method of Premium Collection:* <br>\\n       <div>   \\n          <input id=\\\"wireTransfer\\\" type=\\\"checkbox\\\" value=\\\"1\\\" name=\\\"wire-transfer\\\"><label for=\\\"wireTransfer\\\">Wire Transfer</label>\\n        </div>\\n        <div>\\n          <input id=\\\"bankDraft\\\" type=\\\"checkbox\\\" value=\\\"2\\\" name=\\\"bank-draft\\\">\\n          <label for=\\\"bankDraft\\\"> Draft </label>\\n        </div>\\n        <div>\\n          <input id=\\\"check\\\" type=\\\"checkbox\\\" value=\\\"3\\\" name=\\\"check\\\">\\n          <label for=\\\"check\\\">Check</label>\\n        </div>\\n      </label> -->\\n      <!-- <button type=\\\"submit\\\">Submit</button> -->\\n      <button type=\\\"submit\\\" class=\\\"previousButton\\\" (click)=\\\"onPrev()\\\">Previous</button>\\n    </div>\\n  </form>\\n</div>\\n<div class=\\\"errormessages\\\">\\n  <ul>{{premiumErrors.premium_payors}}</ul>\\n  <ul>{{premiumErrors.paymentMode}}</ul>\\n</div>\\n<div *ngIf=\\\"premiumForm.submitted\\\">\\n  <p>You have submitted getting started screen with values</p>\\n  {{premium.value | json}}\\n</div>\"","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport {attributes} from '../all-attributes'\nimport { ScreenServiceService } from 'src/app/services/screen-service.service';\n\n@Component({\n  selector: 'app-premium',\n  templateUrl: './premium.component.html',\n  styleUrls: ['../css/all-screens.css']\n})\nexport class PremiumComponent implements OnInit {\n  premium_payors = [\"Proposed Insured\",\"Payor\",\"Owner\"];\n  paymentModes = [\"Single Payment\",\"Annual\",\"Semi-Annual\",\"Quarterely\",\"Monthly\"];\n  premium : FormGroup;\n  @Output() prevScreen = new EventEmitter<String>();\n  constructor(private fb:FormBuilder,private service:ScreenServiceService) { }\n\n  ngOnInit() {\n    this.premium = this.fb.group({\n      premium_payors: ['',Validators.required],\n      paymentMode: ['',Validators.required],\n  /*     wireTransfer: ['',Validators.required],\n      bankDraft: ['',Validators.required],\n      check: ['',Validators.required] */\n  });\n  this.getDetails(this.premium);\n  const observable = this.service.getPremiumServerError();\n    const observer = {\n      next: x => {this.premiumErrors=x}\n      }\n    \n    observable.subscribe(observer);\n\n  }\n\nsaveDetails() {\n  event.preventDefault();\n/*   console.log('Using JSON ');  \n  console.log(JSON.stringify(this.premium.value));\n  Object.keys(this.premium.controls).forEach(key => {\n    let value = this.premium.get(key).value;\n    attributes.forEach(function (data) {\n      if (data.name == key) {\n        //console.log(key+' '+value);\n        data.value = value;\n        console.log('attributes value  ' + data.value);\n      }\n    });\n  }) */\n    this.service.postPremium(JSON.parse(JSON.stringify(this.premium.value))).subscribe();\n    this.logValidationError(this.premium);\n}\n\ngetDetails(propInsured: FormGroup) {\n  /* let premiumMap = new Map();\n  Object.keys(propInsured.controls).forEach(key => {\n    //let  value = this.gettingStarted.get(key).value;\n    attributes.forEach(function (data) {\n      if (data.name == key) {\n        //console.log(data.name + ' ' + data.value);\n        premiumMap.set(data.name, data.value);\n      }\n    });\n  })\n  this.premium.patchValue({\n    premium_payors: premiumMap.get(\"premium_payors\"),\n    paymentMode: premiumMap.get(\"paymentMode\")\n  }) */\n  const observable = this.service.getPremium();\n  const observer ={\n    next:x=> {this.premium.patchValue({\n      premium_payors: x.premium_payors,\n      paymentMode: x.paymentMode\n    }) }\n  }\n  observable.subscribe(observer);\n}\nonPrev(){\n  let value = \"existing-applied\";\n  this.prevScreen.emit(value);\n}\nvalidationMessages={\n  'premium_payors': 'Premium Payor is missing.',\n  'paymentMode': 'Payment Mode is missing.'\n}\npremiumErrors={\n  'premium_payors': '',\n  'paymentMode': ''\n}\nlogValidationError(group:FormGroup){\n  Object.keys(group.controls).forEach((\n    key :string) =>{\n      const abstractcontrol = group.get(key);\n      \n      this.premiumErrors[key]='';\n      if(abstractcontrol && !abstractcontrol.valid){\n        this.premiumErrors[key]=this.validationMessages[key];\n      }\n    }\n  )\n\n  this.service.postGettingStartedServerError(JSON.parse(JSON.stringify(this.premiumErrors))).subscribe();\n}\n}\n","module.exports = \"<div class=\\\"pages\\\">\\n    <div class=\\\"heading\\\">Porposed Insured</div>\\n    <div class=\\\"mandatory\\\">* Fields marked with an asterisk are required</div>\\n  <form [formGroup]=\\\"proposedInsured\\\" #proposedInsuredForm=\\\"ngForm\\\">\\n    <div [hidden]=\\\"proposedInsuredForm.submitted\\\">\\n      <label>\\n        Prefix:\\n        <select formControlName=\\\"prefix\\\">\\n          <option *ngFor=\\\"let prefix of prefixes\\\" [value]=\\\"prefix\\\">{{prefix}}</option>\\n        </select>\\n\\n      </label>\\n      <label>\\n        First Name:*\\n        <input type=\\\"text\\\" formControlName=\\\"firstName\\\">\\n      \\n      <div *ngIf=\\\"proposedInsured.controls['firstName'].invalid &&\\n    (proposedInsured.controls['firstName'].dirty || proposedInsured.controls['firstName'].touched)\\\" class=\\\"alert\\\">\\n        <div *ngIf=\\\"proposedInsured.controls['firstName'].errors.required\\\">\\n          First Name is required.\\n        </div>\\n      </div>\\n    </label>\\n      <label>\\n        Middle Name:\\n        <input type=\\\"text\\\" formControlName=\\\"middleName\\\" maxlength=\\\"1\\\">\\n      </label>\\n      <label>\\n        Last Name:*\\n        <input type=\\\"text\\\" formControlName=\\\"lastName\\\">\\n      \\n      <div *ngIf=\\\"proposedInsured.controls['lastName'].invalid &&\\n    (proposedInsured.controls['lastName'].dirty || proposedInsured.controls['lastName'].touched)\\\" class=\\\"alert\\\">\\n        <div *ngIf=\\\"proposedInsured.controls['lastName'].errors.required\\\">\\n          Last Name is required.\\n        </div>\\n      </div>\\n    </label>\\n      <label>\\n        Permanent Address:*\\n        <input type=\\\"text\\\" formControlName=\\\"permanentAddress\\\">\\n      \\n      <div *ngIf=\\\"proposedInsured.controls['permanentAddress'].invalid &&\\n    (proposedInsured.controls['permanentAddress'].dirty || proposedInsured.controls['permanentAddress'].touched)\\\"\\n        class=\\\"alert\\\">\\n        <div *ngIf=\\\"proposedInsured.controls['permanentAddress'].errors.required\\\">\\n          Permanent Address is required.\\n        </div>\\n      </div>\\n    </label>\\n      <label>\\n        Date Of Birth:*\\n        <input type=\\\"date\\\" #dob formControlName=\\\"dateofBirth\\\" (keyup)=\\\"validatedate(dob.value)\\\">\\n        <div *ngIf=\\\"proposedInsured.controls['dateofBirth'].invalid &&\\n      (proposedInsured.controls['dateofBirth'].dirty || proposedInsured.controls['dateofBirth'].touched)\\\"\\n          class=\\\"alert\\\">\\n          <div *ngIf=\\\"proposedInsured.controls['dateofBirth'].errors.required\\\">\\n            Date of birth is required.\\n          </div>\\n        </div>\\n        <div class=\\\"alert\\\" >{{invalidDate}}</div>\\n      </label>\\n\\n      <label>\\n        Social Security Number:*\\n        <input type=\\\"text\\\" formControlName=\\\"ssn\\\">\\n        <div *ngIf=\\\"proposedInsured.controls['ssn'].invalid &&\\n      (proposedInsured.controls['ssn'].dirty || proposedInsured.controls['ssn'].touched)\\\" class=\\\"alert\\\">\\n          <div *ngIf=\\\"proposedInsured.controls['ssn'].errors.required\\\">\\n            SSN is required.\\n          </div>\\n        </div>\\n      </label>\\n      <!-- <button type=\\\"button\\\" (click)=\\\"saveDetails()\\\">Submit</button> -->\\n      <button type=\\\"button\\\" class=\\\"previousButton\\\" (click)=\\\"onPrev()\\\">Previous</button>\\n      <button type=\\\"button\\\" class=\\\"nextButton\\\" (click)=\\\"onNext()\\\">Next</button>\\n    </div>\\n  </form>\\n</div>\\n<div class=\\\"errormessages\\\">\\n  <ul>{{proposedInsuredErrors.firstName}}</ul>\\n  <ul>{{proposedInsuredErrors.lastName}}</ul>\\n  <ul>{{proposedInsuredErrors.permanentAddress}}</ul>\\n  <ul>{{proposedInsuredErrors.dateofBirth}}</ul>\\n  <ul>{{proposedInsuredErrors.ssn}}</ul>\\n</div>\\n<!-- <div *ngIf=\\\"proposedInsuredForm.invalid\\\">invalid form</div>\\n<div *ngIf=\\\"proposedInsuredForm.submitted\\\">\\n  <p>You have submitted Proposed Insured screen with values</p>\\n  {{proposedInsured.value | json}}\\n</div> -->\"","import { Component, OnInit, OnChanges, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport { attributes } from '../all-attributes';\nimport { ScreenServiceService } from 'src/app/services/screen-service.service';\n@Component({\n  selector: 'app-proposed-insured',\n  templateUrl: './proposed-insured.component.html',\n  styleUrls: ['../css/all-screens.css']\n})\nexport class ProposedInsuredComponent implements OnInit {\n  @Input() selectedScreen: String;\n  @Output() prevScreen = new EventEmitter<String>();\n  @Output() nextScreen = new EventEmitter<String>();\n  @Input('isOwner') isOwner : boolean;\n  proposedInsured: FormGroup;\n  constructor(private fb: FormBuilder, private service: ScreenServiceService) { }\n  prefixes = [\"commander\", \"Doctor\", \"Mr.\", \"Ms\", \"Mrs.\", \"General\"];\n  ngOnInit() {\n    this.proposedInsured = this.fb.group({\n      prefix: [''],\n      firstName: ['', Validators.required],\n      middleName: ['', Validators.maxLength(1)],\n      lastName: ['', Validators.required],\n      permanentAddress: ['', Validators.required],\n      dateofBirth: ['', Validators.required],\n      ssn: ['', Validators.required]\n    });\n    this.getDetails(this.proposedInsured);\n    const observable = this.service.getProposed_InsuredServerError();\n    const observer = {\n      next: x => {this.proposedInsuredErrors=x}\n      }\n    \n    observable.subscribe(observer);\n  }\n  invalidDate  : {}\n  validatedate(date : String){\n    //console.log(this.ownersArray.at(index).get(\"dateofBirth\").value);\n    let year = parseInt(date.split(\"-\")[0]);\n    if(year<1900 || year >2099){\n      // console.log('Please enter a valid date')\n      \n      this.invalidDate = \"Please enter a valid date\";\n    }\n    else{\n      this.invalidDate = \"\";\n    }\n  }\n\n  saveDetails() {\n    event.preventDefault();\n/*     console.log('Using JSON ');\n    console.log(JSON.stringify(this.proposedInsured.value));\n    Object.keys(this.proposedInsured.controls).forEach(key => {\n      let value = this.proposedInsured.get(key).value;\n      attributes.forEach(function (data) {\n        if (data.name == key) {\n          //console.log(key+' '+value);\n          data.value = value;\n          //console.log('attributes value  ' + data.value);\n        }\n      });\n    }) */\n    this.service.postProposedInsured(JSON.parse(JSON.stringify(this.proposedInsured.value))).subscribe();\n    this.logValidationError(this.proposedInsured);\n  }\n\n  getDetails(propInsured: FormGroup) {\n    /* let proposedInsuredMap = new Map();\n    Object.keys(propInsured.controls).forEach(key => {\n      //let  value = this.gettingStarted.get(key).value;\n      attributes.forEach(function (data) {\n        if (data.name == key) {\n          //console.log(data.name + ' ' + data.value);\n          proposedInsuredMap.set(data.name, data.value);\n        }\n      });\n    })\n    this.proposedInsured.patchValue({\n      prefix: proposedInsuredMap.get(\"prefix\"),\n      firstName: proposedInsuredMap.get(\"firstName\"),\n      middleName: proposedInsuredMap.get(\"middleName\"),\n      lastName: proposedInsuredMap.get(\"lastName\"),\n      permanentAddress: proposedInsuredMap.get(\"permanentAddress\"),\n      dateofBirth: proposedInsuredMap.get(\"dateofBirth\"),\n      ssn: proposedInsuredMap.get(\"ssn\"),\n    }) */\n    const observable = this.service.getProposedInsured();\n    const observer = {\n      next: x => {\n        this.proposedInsured.patchValue({\n          prefix: x.prefix,\n          firstName: x.firstName,\n          middleName: x.middleName,\n          lastName: x.lastName,\n          permanentAddress: x.permanentAddress,\n          dateofBirth: x.dateofBirth,\n          ssn: x.ssn\n        });\n\n      }\n    }\n    observable.subscribe(observer);\n\n  }\n  onPrev(){\n    let value = \"getting-started\";\n    this.prevScreen.emit(value);\n  }\n  onNext(){\n    let value= \"proposed-insured\";\n    if(this.isOwner){\n      value = \"owner\";\n    }\n    else{\n      value = \"existing-applied\"\n    }\n    this.nextScreen.emit(value);\n  }\n  validationMessages= {\n    \"firstName\": \"First Name is required.\",\n    \"lastName\": \"Last Name is required.\",\n    \"permanentAddress\": \"Permanent Address is required.\",\n    \"dateofBirth\": \"Date of birth is required.\",\n    \"ssn\": \"SSN is required.\"\n  }\n  proposedInsuredErrors= {\n    \"firstName\": \"\",\n    \"lastName\": \"\",\n    \"permanentAddress\": \"\",\n    \"dateofBirth\": \"\",\n    \"ssn\": \"\"\n  }\n  logValidationError(group:FormGroup){\n    Object.keys(group.controls).forEach((\n      key :string) =>{\n        const abstractcontrol = group.get(key);\n        \n        this.proposedInsuredErrors[key]='';\n        if(abstractcontrol && !abstractcontrol.valid){\n          this.proposedInsuredErrors[key]=this.validationMessages[key];\n        }\n      }\n    )\n    this.service.postProposed_InsuredServerError(JSON.parse(JSON.stringify(this.proposedInsuredErrors))).subscribe();\n  }\n}","module.exports = \"div{\\r\\n  float: left;\\r\\n  width: 20%;\\r\\n}\\r\\n.screens {\\r\\n    margin: 0 0 2em 0;\\r\\n    list-style-type: none;\\r\\n    padding: 0;\\r\\n    width: 15em;\\r\\n  }\\r\\n.screens li {\\r\\n    cursor: pointer;\\r\\n    position: relative;\\r\\n    left: 0;\\r\\n   /* background-color: #EEE; */\\r\\n    background-color: #607D8B;\\r\\n    margin: .5em;\\r\\n    padding: .3em 0;\\r\\n    height: 1.6em;\\r\\n    border-radius: 4px;\\r\\n    left: -1px;\\r\\n    top: -4px;\\r\\n    height: 1.8em;\\r\\n    position: relative;\\r\\n    line-height: 1 em;\\r\\n  }\\r\\n.screens li:hover {\\r\\n    color: #607D8B;\\r\\n    background-color: rgb(215, 236, 20);\\r\\n    left: .1em;\\r\\n  }\\r\\n.screens .badge {\\r\\n    display: inline-block;\\r\\n    font-size: small;\\r\\n    color: white;\\r\\n    padding: 0.8em 0.7em 0 0.7em;\\r\\n    background-color: #607D8B;\\r\\n    line-height: 1em;\\r\\n    position: absolute;\\r\\n    left: -1px;\\r\\n    top: -4px;\\r\\n    height: 1.8em;\\r\\n    margin-right: .8em;\\r\\n    border-radius: 4px 0 0 4px;\\r\\n  }\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2NyZWVucy9zY3JlZW5zLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0VBQ1gsVUFBVTtBQUNaO0FBQ0E7SUFDSSxpQkFBaUI7SUFDakIscUJBQXFCO0lBQ3JCLFVBQVU7SUFDVixXQUFXO0VBQ2I7QUFDQTtJQUNFLGVBQWU7SUFDZixrQkFBa0I7SUFDbEIsT0FBTztHQUNSLDRCQUE0QjtJQUMzQix5QkFBeUI7SUFDekIsWUFBWTtJQUNaLGVBQWU7SUFDZixhQUFhO0lBQ2Isa0JBQWtCO0lBQ2xCLFVBQVU7SUFDVixTQUFTO0lBQ1QsYUFBYTtJQUNiLGtCQUFrQjtJQUNsQixpQkFBaUI7RUFDbkI7QUFDQTtJQUNFLGNBQWM7SUFDZCxtQ0FBbUM7SUFDbkMsVUFBVTtFQUNaO0FBQ0E7SUFDRSxxQkFBcUI7SUFDckIsZ0JBQWdCO0lBQ2hCLFlBQVk7SUFDWiw0QkFBNEI7SUFDNUIseUJBQXlCO0lBQ3pCLGdCQUFnQjtJQUNoQixrQkFBa0I7SUFDbEIsVUFBVTtJQUNWLFNBQVM7SUFDVCxhQUFhO0lBQ2Isa0JBQWtCO0lBQ2xCLDBCQUEwQjtFQUM1QiIsImZpbGUiOiJzcmMvYXBwL3NjcmVlbnMvc2NyZWVucy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZGl2e1xyXG4gIGZsb2F0OiBsZWZ0O1xyXG4gIHdpZHRoOiAyMCU7XHJcbn1cclxuLnNjcmVlbnMge1xyXG4gICAgbWFyZ2luOiAwIDAgMmVtIDA7XHJcbiAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgd2lkdGg6IDE1ZW07XHJcbiAgfVxyXG4gIC5zY3JlZW5zIGxpIHtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGxlZnQ6IDA7XHJcbiAgIC8qIGJhY2tncm91bmQtY29sb3I6ICNFRUU7ICovXHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjA3RDhCO1xyXG4gICAgbWFyZ2luOiAuNWVtO1xyXG4gICAgcGFkZGluZzogLjNlbSAwO1xyXG4gICAgaGVpZ2h0OiAxLjZlbTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgIGxlZnQ6IC0xcHg7XHJcbiAgICB0b3A6IC00cHg7XHJcbiAgICBoZWlnaHQ6IDEuOGVtO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgbGluZS1oZWlnaHQ6IDEgZW07XHJcbiAgfVxyXG4gIC5zY3JlZW5zIGxpOmhvdmVyIHtcclxuICAgIGNvbG9yOiAjNjA3RDhCO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIxNSwgMjM2LCAyMCk7XHJcbiAgICBsZWZ0OiAuMWVtO1xyXG4gIH1cclxuICAuc2NyZWVucyAuYmFkZ2Uge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgZm9udC1zaXplOiBzbWFsbDtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIHBhZGRpbmc6IDAuOGVtIDAuN2VtIDAgMC43ZW07XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjA3RDhCO1xyXG4gICAgbGluZS1oZWlnaHQ6IDFlbTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGxlZnQ6IC0xcHg7XHJcbiAgICB0b3A6IC00cHg7XHJcbiAgICBoZWlnaHQ6IDEuOGVtO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAuOGVtO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4IDAgMCA0cHg7XHJcbiAgfVxyXG4iXX0= */\"","module.exports = \"<div>\\n<ul class=\\\"screens\\\">\\n<li *ngFor=\\\"let screen of screens\\\"  (click)=\\\"OnSelectedScreen(screen)\\\">{{screen.name}}</li>\\n\\n   <!-- <span (click)=\\\"OnSelectedScreen(screen)\\\" class=\\\"badge\\\">{{screen.name}}</span>  -->\\n\\n  \\n</ul>\\n</div>\\n<div *ngIf = \\\"selectedScreen\\\">\\n<div [ngSwitch] = \\\"selectedScreen\\\">\\n<app-getting-started  *ngSwitchCase=\\\"'getting-started'\\\" [selectedScreen]=\\\"selectedScreen\\\" (PIotherThanOwn)=\\\"IsPIOtherThanOwn($event)\\\" (nextScreen)=\\\"changeNextScreen($event)\\\"></app-getting-started>\\n<app-proposed-insured *ngSwitchCase=\\\"'proposed-insured'\\\" [isOwner]=\\\"PIOtherOwn\\\" (prevScreen)=\\\"changePrevScreen($event)\\\" (nextScreen)=\\\"changeNextScreen($event)\\\"></app-proposed-insured>\\n<app-owner *ngSwitchCase=\\\"'owner'\\\" (prevScreen)=\\\"changePrevScreen($event)\\\" (nextScreen)=\\\"changeNextScreen($event)\\\"></app-owner>\\n<app-existing-applied *ngSwitchCase=\\\"'existing-applied'\\\" [isOwner]=\\\"PIOtherOwn\\\" (prevScreen)=\\\"changePrevScreen($event)\\\" (nextScreen)=\\\"changeNextScreen($event)\\\"></app-existing-applied>\\n<app-premium *ngSwitchCase=\\\"'premium'\\\" (prevScreen)=\\\"changePrevScreen($event)\\\"></app-premium>\\n</div>\\n</div>\"","import { Component, OnInit, ViewChild, KeyValueDiffer} from '@angular/core';\nimport {Screen} from '../screen'\nimport {SCREENS} from '../all-screens'\nimport { GettingStartedComponent } from './getting-started/getting-started.component';\nimport { ProposedInsuredComponent } from './proposed-insured/proposed-insured.component';\nimport { OwnerComponent } from './owner/owner.component';\nimport { PremiumComponent } from './premium/premium.component';\nimport { ExistingAppliedComponent } from './existing-applied/existing-applied.component';\n\n@Component({\n  selector: 'app-screens',\n  templateUrl: './screens.component.html',\n  styleUrls: ['./screens.component.css']\n})\nexport class ScreensComponent implements OnInit {\n\n selectedScreen : String;\n differ : KeyValueDiffer<String,Object>;\n @ViewChild(GettingStartedComponent)\n private gettingStartedComponent : GettingStartedComponent;\n @ViewChild(ProposedInsuredComponent)\n private proposedInsuredComponent : ProposedInsuredComponent;\n @ViewChild(OwnerComponent)\n private ownerComponent : OwnerComponent;\n @ViewChild(PremiumComponent)\n private premiumComponent: PremiumComponent;\n @ViewChild(ExistingAppliedComponent)\n private existingAppliedComponent: ExistingAppliedComponent;\n\n  PIOtherOwn : boolean;\n  //nextScreen : String;\n  screens=SCREENS;\n    constructor() { }\n\n  ngOnInit() {\n    this.PIOtherOwn =false;\n    this.selectedScreen = \"getting-started\";\n  }\n/*   ngOnChanges(changes: SimpleChanges): void {\n   console.log('In ngOnchanges in Screens ............');\n   for(let name in changes){\n     console.log('name :'+changes[name].currentValue);\n     console.log('isFirstChange :'+changes[name].isFirstChange);\n     console.log('previous value :'+changes[name].previousValue);\n     console.log('firstchange :'+changes[name].firstChange);\n   }\n   \n  } */\n/*   ngDoCheck(): void {\n    console.log('Im Do check  '+this.selectedScreen);\n  } */\n  OnSelectedScreen(screen : Screen){\n    let  prev_screen = this.selectedScreen;\n    this.selectedScreen=screen.id;\n    this.saveDetails(prev_screen);\n  }\n  saveDetails(screen : String){\n/*     if(screen == \"getting-started\")\n    this.gettingStartedComponent.saveDetails();\n    if(screen == \"proposed-insured\")\n    this.proposedInsuredComponent.saveDetails(); */\n    //console.log('all details saved');\n    switch(screen){\n      case \"getting-started\" :   {this.gettingStartedComponent.saveDetails(); break;}\n      case \"proposed-insured\" :  {this.proposedInsuredComponent.saveDetails(); break;}\n      case \"owner\" :  {this.ownerComponent.saveDetails(); break;}\n      case \"existing-applied\" :  {this.existingAppliedComponent.saveDetails(); break;}\n      case \"premium\" :  {this.premiumComponent.saveDetails(); }\n    }\n  }\n  ownerScreen = new Screen('owner','owner')\n\n  IsPIOtherThanOwn(PIOtherOwn : String){\n    if(PIOtherOwn == \"Yes\"){\n      this.PIOtherOwn =true; \n      if(!this.screens.includes(this.ownerScreen)){\n      this.screens.splice(2,0,this.ownerScreen);\n      }\n    }else{\n      this.PIOtherOwn =false;\n     // this.ownerComponent.ownersArray\n      if(this.screens.includes(this.ownerScreen))\n      this.screens.splice(2,1);\n    }\n  }\n  changeNextScreen(nextScreen : String){\n    let  prev_screen = this.selectedScreen;\n    this.selectedScreen=nextScreen;\n    this.saveDetails(prev_screen);\n  }\n  changePrevScreen(prevScreen : String){\n    let  prev_screen = this.selectedScreen;\n    this.selectedScreen=prevScreen;\n    this.saveDetails(prev_screen);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs' ;\n//import {attributes} from './all-attributes';\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ScreenServiceService {\n  private baseUrl = 'http://20.198.11.75:3002/';\n  constructor(private http: HttpClient) { }\n  partialSave(attributes: Object): Observable<Object> {\n    return this.http.post(`${this.baseUrl}`, attributes);\n  }\n  postGettingStarted(attributes : JSON) : Observable<Object>{\n    console.log('post gettingstarted from service '+attributes);\n    return this.http.post<JSON>(this.baseUrl+'getting_started', attributes);\n  }\n  postOwner(attributes : JSON) : Observable<JSON>{\n    console.log('post owner from service '+attributes);\n    return this.http.post<JSON>(this.baseUrl+'owners', attributes);\n  }\n  putOwner(attributes : JSON,index:Number) : Observable<Object>{\n    console.log('put owner from service '+attributes);\n    return this.http.put<JSON>(this.baseUrl+'owners/'+index, attributes);\n  }\n  deleteOwner(index:Number):Observable<Object>{\n    console.log('delete owner from index '+index);\n    return this.http.delete(this.baseUrl+'owners/'+index);\n  }\n  postProposedInsured(attributes : JSON) : Observable<Object>{\n    console.log('post proposed insured from service '+attributes);\n    return this.http.post<JSON>(this.baseUrl+'proposed_Insured', attributes);\n  }\n  postExistingApplied(attributes : JSON) : Observable<Object>{\n    console.log('post existing from service '+attributes);\n    return this.http.post<JSON>(this.baseUrl+'existingApplied', attributes);\n  }\n  postPremium(attributes : JSON) : Observable<Object>{\n    console.log('post premium from service '+attributes);\n    return this.http.post<JSON>(this.baseUrl+'premium', attributes);\n  }\n  getGettingStarted():Observable<JSON>{\n    \n    return this.http.get<JSON>(this.baseUrl+'getting_started');\n  }\n\n  getProposedInsured():Observable<JSON>{\n    return this.http.get<JSON>(this.baseUrl+'proposed_Insured');\n  }\n  getOwner():Observable<JSON>{\n    return this.http.get<JSON>(this.baseUrl+'owners');\n  }\n  getExistingApplied():Observable<JSON>{\n    return this.http.get<JSON>(this.baseUrl+'existingApplied');\n  }\n  getPremium():Observable<JSON>{\n    return this.http.get<JSON>(this.baseUrl+'premium');\n  }\n  getGettingStartedServerError():Observable<[]>{\n    return this.http.get<[]>(this.baseUrl+'gettingStarted_Error');\n  }\n  getProposed_InsuredServerError():Observable<[]>{\n    return this.http.get<[]>(this.baseUrl+'proposed_Insured_Error');\n  }\n  getownerServerError():Observable<[]>{\n    return this.http.get<[]>(this.baseUrl+'owner_Error');\n  }\n  getexistingAppliedServerError():Observable<[]>{\n    return this.http.get<[]>(this.baseUrl+'existingApplied_Error');\n  }\n  getPremiumServerError():Observable<[]>{\n    return this.http.get<[]>(this.baseUrl+'premium_Error');\n  }\n  postGettingStartedServerError(errors : JSON):Observable<Object>{\n    console.log('postServerError success');\n    return this.http.post<JSON>(this.baseUrl+'gettingStarted_Error',errors);\n  }\n  postProposed_InsuredServerError(errors : JSON):Observable<Object>{\n    console.log('postServerError success');\n    return this.http.post<JSON>(this.baseUrl+'proposed_Insured_Error',errors);\n  }\n  postOwnerServerError(errors : JSON):Observable<Object>{\n    console.log('postServerError Owner success'+JSON.stringify(errors));\n    return this.http.post<JSON>(this.baseUrl+'owner_Error',errors);\n  }\n  putOwnerServerError(errors : JSON,index:number):Observable<Object>{\n    console.log('putServerError Owner success');\n    return this.http.put<JSON>(this.baseUrl+'owner_Error/'+index,errors);\n  }\n  deleteOwnerServerError(index:number):Observable<Object>{\n    console.log('delete ServerError success');\n    return this.http.delete<JSON>(this.baseUrl+'owner_Error/'+index);\n  }\n  postexistingAppliedServerError(errors : JSON):Observable<Object>{\n    console.log('postServerError success');\n    return this.http.post<JSON>(this.baseUrl+'existingApplied_Error',errors);\n  }\n  postPremiumServerError(errors : JSON):Observable<Object>{\n    console.log('postServerError success');\n    return this.http.post<JSON>(this.baseUrl+'premium_Error',errors);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}